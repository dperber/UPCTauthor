// automatically generated by Xtext
grammar org.xtext.TemplateDsl with org.eclipse.xtext.common.Terminals

import "platform:/resource/templateupctforma/model/templateupctforma.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

TemplateDefinition returns TemplateDefinition:
	{TemplateDefinition}
	'TemplateDefinition'
	'{'
		('templates' '{' templates+=Template ( "," templates+=Template)* '}' )?
		('widgets' '{' widgets+=WidgetDef ( "," widgets+=WidgetDef)* '}' )?
	'}';




Parameter returns Parameter:
	Parameter_Impl | ParameterSimple | ParameterComposite;


TemplateElement returns TemplateElement:
	TemplateElement_Impl | Text | Image | Video | ElementSimple | ElementComposite | Widget;

Template returns Template:
	'Template'
	'{'
		'blocks' '{' blocks+=Block ( "," blocks+=Block)* '}' 
	'}';

WidgetDef returns WidgetDef:
	{WidgetDef}
	'WidgetDef'
	'{'
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	'}';

Block returns Block:
	'Block'
	'{'
		'columns' '{' columns+=Column ( "," columns+=Column)* '}' 
	'}';

Column returns Column:
	{Column}
	'Column'
	'{'
		('elements' elements=[TemplateElement|EString])?
	'}';

TemplateElement_Impl returns TemplateElement:
	{TemplateElement}
	'TemplateElement'
	;

Text returns Text:
	{Text}
	'Text'
	;

Image returns Image:
	{Image}
	'Image'
	;

Video returns Video:
	{Video}
	'Video'
	;

ElementSimple returns ElementSimple:
	'ElementSimple'
	'{'
		'elementssimple' '{' elementssimple+=TemplateElement ( "," elementssimple+=TemplateElement)* '}' 
	'}';

ElementComposite returns ElementComposite:
	'ElementComposite'
	'{'
		'elementcomposite' '{' elementcomposite+=Block ( "," elementcomposite+=Block)* '}' 
	'}';

Widget returns Widget:
	'Widget'
	'{'
		'typewidget' typewidget=[WidgetDef|EString]
	'}';

Parameter_Impl returns Parameter:
	{Parameter}
	'Parameter'
	;

ParameterSimple returns ParameterSimple:
	'ParameterSimple'
	'{'
		'typeparametersimple' typeparametersimple=[TemplateElement|EString]
	'}';

ParameterComposite returns ParameterComposite:
	'ParameterComposite'
	'{'
		'typeparametercomposite' typeparametercomposite=[Block|EString]
	'}';

	EString returns ecore::EString:
		STRING | ID;
		
	;