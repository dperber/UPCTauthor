/*
 * generated by Xtext 2.12.0
 */
grammar InternalUpctforma;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.UpctformaGrammarAccess;

}

@parser::members {

 	private UpctformaGrammarAccess grammarAccess;

    public InternalUpctformaParser(TokenStream input, UpctformaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ContentDefinition";
   	}

   	@Override
   	protected UpctformaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleContentDefinition
entryRuleContentDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentDefinitionRule()); }
	iv_ruleContentDefinition=ruleContentDefinition
	{ $current=$iv_ruleContentDefinition.current; }
	EOF;

// Rule ContentDefinition
ruleContentDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getContentDefinitionAccess().getContentDefinitionAction_0(),
					$current);
			}
		)
		otherlv_1='ContentDefinition'
		{
			newLeafNode(otherlv_1, grammarAccess.getContentDefinitionAccess().getContentDefinitionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContentDefinitionAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentDefinitionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.Upctforma.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getContentDefinitionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='package'
			{
				newLeafNode(otherlv_4, grammarAccess.getContentDefinitionAccess().getPackageKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContentDefinitionAccess().getNameQualifiedNameParserRuleCall_4_1_0());
					}
					lv_name_5_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContentDefinitionRule());
						}
						set(
							$current,
							"name",
							lv_name_5_0,
							"org.xtext.Upctforma.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=';'
			{
				newLeafNode(otherlv_6, grammarAccess.getContentDefinitionAccess().getSemicolonKeyword_4_2());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getContentDefinitionAccess().getImportsImportParserRuleCall_5_0_0());
					}
					lv_imports_7_0=ruleImport
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContentDefinitionRule());
						}
						add(
							$current,
							"imports",
							lv_imports_7_0,
							"org.xtext.Upctforma.Import");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getContentDefinitionAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getContentDefinitionAccess().getImportsImportParserRuleCall_5_1_1_0());
						}
						lv_imports_9_0=ruleImport
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContentDefinitionRule());
							}
							add(
								$current,
								"imports",
								lv_imports_9_0,
								"org.xtext.Upctforma.Import");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_10='types'
			{
				newLeafNode(otherlv_10, grammarAccess.getContentDefinitionAccess().getTypesKeyword_6_0());
			}
			otherlv_11='{'
			{
				newLeafNode(otherlv_11, grammarAccess.getContentDefinitionAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContentDefinitionAccess().getTypesTypeParserRuleCall_6_2_0());
					}
					lv_types_12_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContentDefinitionRule());
						}
						add(
							$current,
							"types",
							lv_types_12_0,
							"org.xtext.Upctforma.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getContentDefinitionAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getContentDefinitionAccess().getTypesTypeParserRuleCall_6_3_1_0());
						}
						lv_types_14_0=ruleType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContentDefinitionRule());
							}
							add(
								$current,
								"types",
								lv_types_14_0,
								"org.xtext.Upctforma.Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getContentDefinitionAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_16='templates'
			{
				newLeafNode(otherlv_16, grammarAccess.getContentDefinitionAccess().getTemplatesKeyword_7_0());
			}
			otherlv_17='{'
			{
				newLeafNode(otherlv_17, grammarAccess.getContentDefinitionAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContentDefinitionAccess().getTemplatesTemplateDefParserRuleCall_7_2_0());
					}
					lv_templates_18_0=ruleTemplateDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContentDefinitionRule());
						}
						add(
							$current,
							"templates",
							lv_templates_18_0,
							"org.xtext.Upctforma.TemplateDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_19=','
				{
					newLeafNode(otherlv_19, grammarAccess.getContentDefinitionAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getContentDefinitionAccess().getTemplatesTemplateDefParserRuleCall_7_3_1_0());
						}
						lv_templates_20_0=ruleTemplateDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getContentDefinitionRule());
							}
							add(
								$current,
								"templates",
								lv_templates_20_0,
								"org.xtext.Upctforma.TemplateDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_21='}'
			{
				newLeafNode(otherlv_21, grammarAccess.getContentDefinitionAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getContentDefinitionAccess().getUnitUnitParserRuleCall_8_0());
				}
				lv_unit_22_0=ruleUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContentDefinitionRule());
					}
					set(
						$current,
						"unit",
						lv_unit_22_0,
						"org.xtext.Upctforma.Unit");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_23='}'
		{
			newLeafNode(otherlv_23, grammarAccess.getContentDefinitionAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"org.xtext.Upctforma.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getImportAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getType_ImplParserRuleCall_0());
		}
		this_Type_Impl_0=ruleType_Impl
		{
			$current = $this_Type_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getSimpleTypeParserRuleCall_1());
		}
		this_SimpleType_1=ruleSimpleType
		{
			$current = $this_SimpleType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getRecordTypeParserRuleCall_2());
		}
		this_RecordType_2=ruleRecordType
		{
			$current = $this_RecordType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getWidgetTypeParserRuleCall_3());
		}
		this_WidgetType_3=ruleWidgetType
		{
			$current = $this_WidgetType_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getListTypeParserRuleCall_4());
		}
		this_ListType_4=ruleListType
		{
			$current = $this_ListType_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getCompositeType_ImplParserRuleCall_5());
		}
		this_CompositeType_Impl_5=ruleCompositeType_Impl
		{
			$current = $this_CompositeType_Impl_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleContentElement
entryRuleContentElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentElementRule()); }
	iv_ruleContentElement=ruleContentElement
	{ $current=$iv_ruleContentElement.current; }
	EOF;

// Rule ContentElement
ruleContentElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getContentElementAccess().getContentElement_ImplParserRuleCall_0());
		}
		this_ContentElement_Impl_0=ruleContentElement_Impl
		{
			$current = $this_ContentElement_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentElementAccess().getColumnParserRuleCall_1());
		}
		this_Column_1=ruleColumn
		{
			$current = $this_Column_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentElementAccess().getImageParserRuleCall_2());
		}
		this_Image_2=ruleImage
		{
			$current = $this_Image_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentElementAccess().getWidgetParserRuleCall_3());
		}
		this_Widget_3=ruleWidget
		{
			$current = $this_Widget_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentElementAccess().getTextParserRuleCall_4());
		}
		this_Text_4=ruleText
		{
			$current = $this_Text_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentElementAccess().getComposite_ImplParserRuleCall_5());
		}
		this_Composite_Impl_5=ruleComposite_Impl
		{
			$current = $this_Composite_Impl_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentElementAccess().getVideoParserRuleCall_6());
		}
		this_Video_6=ruleVideo
		{
			$current = $this_Video_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentElementAccess().getSimpleElement_ImplParserRuleCall_7());
		}
		this_SimpleElement_Impl_7=ruleSimpleElement_Impl
		{
			$current = $this_SimpleElement_Impl_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentElementAccess().getPlaceHolderParserRuleCall_8());
		}
		this_PlaceHolder_8=rulePlaceHolder
		{
			$current = $this_PlaceHolder_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentElementAccess().getRowParserRuleCall_9());
		}
		this_Row_9=ruleRow
		{
			$current = $this_Row_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentElementAccess().getGameParserRuleCall_10());
		}
		this_Game_10=ruleGame
		{
			$current = $this_Game_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentElementAccess().getRecordValueParserRuleCall_11());
		}
		this_RecordValue_11=ruleRecordValue
		{
			$current = $this_RecordValue_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentElementAccess().getListValueParserRuleCall_12());
		}
		this_ListValue_12=ruleListValue
		{
			$current = $this_ListValue_12.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleTemplateDef
entryRuleTemplateDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemplateDefRule()); }
	iv_ruleTemplateDef=ruleTemplateDef
	{ $current=$iv_ruleTemplateDef.current; }
	EOF;

// Rule TemplateDef
ruleTemplateDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTemplateDefAccess().getTemplateDefAction_0(),
					$current);
			}
		)
		otherlv_1='TemplateDef'
		{
			newLeafNode(otherlv_1, grammarAccess.getTemplateDefAccess().getTemplateDefKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTemplateDefAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTemplateDefRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.Upctforma.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getTemplateDefAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTemplateDefAccess().getRowsRowParserRuleCall_4_0_0());
					}
					lv_rows_4_0=ruleRow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTemplateDefRule());
						}
						add(
							$current,
							"rows",
							lv_rows_4_0,
							"org.xtext.Upctforma.Row");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getTemplateDefAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTemplateDefAccess().getRowsRowParserRuleCall_4_1_1_0());
						}
						lv_rows_6_0=ruleRow
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTemplateDefRule());
							}
							add(
								$current,
								"rows",
								lv_rows_6_0,
								"org.xtext.Upctforma.Row");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getTemplateDefAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleUnit
entryRuleUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitRule()); }
	iv_ruleUnit=ruleUnit
	{ $current=$iv_ruleUnit.current; }
	EOF;

// Rule Unit
ruleUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Unit'
		{
			newLeafNode(otherlv_0, grammarAccess.getUnitAccess().getUnitKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.Upctforma.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitAccess().getAuthorEStringParserRuleCall_2_0());
				}
				lv_author_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitRule());
					}
					set(
						$current,
						"author",
						lv_author_2_0,
						"org.xtext.Upctforma.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitAccess().getSectionsSectionParserRuleCall_4_0());
				}
				lv_sections_4_0=ruleSection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitRule());
					}
					add(
						$current,
						"sections",
						lv_sections_4_0,
						"org.xtext.Upctforma.Section");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getUnitAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUnitAccess().getSectionsSectionParserRuleCall_5_1_0());
					}
					lv_sections_6_0=ruleSection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnitRule());
						}
						add(
							$current,
							"sections",
							lv_sections_6_0,
							"org.xtext.Upctforma.Section");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleType_Impl
entryRuleType_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getType_ImplRule()); }
	iv_ruleType_Impl=ruleType_Impl
	{ $current=$iv_ruleType_Impl.current; }
	EOF;

// Rule Type_Impl
ruleType_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getType_ImplAccess().getTypeAction_0(),
					$current);
			}
		)
		otherlv_1='Type'
		{
			newLeafNode(otherlv_1, grammarAccess.getType_ImplAccess().getTypeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getType_ImplAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getType_ImplRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.Upctforma.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRow
entryRuleRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowRule()); }
	iv_ruleRow=ruleRow
	{ $current=$iv_ruleRow.current; }
	EOF;

// Rule Row
ruleRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRowAccess().getRowAction_0(),
					$current);
			}
		)
		otherlv_1='row'
		{
			newLeafNode(otherlv_1, grammarAccess.getRowAccess().getRowKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRowAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRowAccess().getColumnsColumnParserRuleCall_3_0_0());
					}
					lv_columns_3_0=ruleColumn
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRowRule());
						}
						add(
							$current,
							"columns",
							lv_columns_3_0,
							"org.xtext.Upctforma.Column");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getRowAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRowAccess().getColumnsColumnParserRuleCall_3_1_1_0());
						}
						lv_columns_5_0=ruleColumn
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRowRule());
							}
							add(
								$current,
								"columns",
								lv_columns_5_0,
								"org.xtext.Upctforma.Column");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_6='usetemplate'
			{
				newLeafNode(otherlv_6, grammarAccess.getRowAccess().getUsetemplateKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRowAccess().getUsetemplateUseTemplateParserRuleCall_4_1_0());
					}
					lv_usetemplate_7_0=ruleUseTemplate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRowRule());
						}
						set(
							$current,
							"usetemplate",
							lv_usetemplate_7_0,
							"org.xtext.Upctforma.UseTemplate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getRowAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleColumn
entryRuleColumn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnRule()); }
	iv_ruleColumn=ruleColumn
	{ $current=$iv_ruleColumn.current; }
	EOF;

// Rule Column
ruleColumn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getColumnAccess().getColumnAction_0(),
					$current);
			}
		)
		otherlv_1='column'
		{
			newLeafNode(otherlv_1, grammarAccess.getColumnAccess().getColumnKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getColumnAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='width'
			{
				newLeafNode(otherlv_3, grammarAccess.getColumnAccess().getWidthKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnAccess().getWidthEStringParserRuleCall_3_1_0());
					}
					lv_width_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnRule());
						}
						set(
							$current,
							"width",
							lv_width_4_0,
							"org.xtext.Upctforma.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnAccess().getElementsContentElementParserRuleCall_4_0_0());
					}
					lv_elements_5_0=ruleContentElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnRule());
						}
						add(
							$current,
							"elements",
							lv_elements_5_0,
							"org.xtext.Upctforma.ContentElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getColumnAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getColumnAccess().getElementsContentElementParserRuleCall_4_1_1_0());
						}
						lv_elements_7_0=ruleContentElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getColumnRule());
							}
							add(
								$current,
								"elements",
								lv_elements_7_0,
								"org.xtext.Upctforma.ContentElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getColumnAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleUseTemplate
entryRuleUseTemplate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUseTemplateRule()); }
	iv_ruleUseTemplate=ruleUseTemplate
	{ $current=$iv_ruleUseTemplate.current; }
	EOF;

// Rule UseTemplate
ruleUseTemplate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUseTemplateAccess().getUseTemplateAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUseTemplateRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getUseTemplateAccess().getTypetemplateTemplateDefCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getUseTemplateAccess().getLeftCurlyBracketKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUseTemplateAccess().getTemplateelementsContentElementParserRuleCall_2_1_0());
					}
					lv_templateelements_3_0=ruleContentElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUseTemplateRule());
						}
						add(
							$current,
							"templateelements",
							lv_templateelements_3_0,
							"org.xtext.Upctforma.ContentElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getUseTemplateAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUseTemplateAccess().getTemplateelementsContentElementParserRuleCall_2_2_1_0());
						}
						lv_templateelements_5_0=ruleContentElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUseTemplateRule());
							}
							add(
								$current,
								"templateelements",
								lv_templateelements_5_0,
								"org.xtext.Upctforma.ContentElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getUseTemplateAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleContentElement_Impl
entryRuleContentElement_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentElement_ImplRule()); }
	iv_ruleContentElement_Impl=ruleContentElement_Impl
	{ $current=$iv_ruleContentElement_Impl.current; }
	EOF;

// Rule ContentElement_Impl
ruleContentElement_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getContentElement_ImplAccess().getContentElementAction_0(),
					$current);
			}
		)
		otherlv_1='ContentElement'
		{
			newLeafNode(otherlv_1, grammarAccess.getContentElement_ImplAccess().getContentElementKeyword_1());
		}
	)
;

// Entry rule entryRuleImage
entryRuleImage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImageRule()); }
	iv_ruleImage=ruleImage
	{ $current=$iv_ruleImage.current; }
	EOF;

// Rule Image
ruleImage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getImageAccess().getImageAction_0(),
					$current);
			}
		)
		otherlv_1='Image'
		{
			newLeafNode(otherlv_1, grammarAccess.getImageAccess().getImageKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getImageAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='url'
			{
				newLeafNode(otherlv_3, grammarAccess.getImageAccess().getUrlKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImageAccess().getUrlEStringParserRuleCall_3_1_0());
					}
					lv_url_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImageRule());
						}
						set(
							$current,
							"url",
							lv_url_4_0,
							"org.xtext.Upctforma.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getImageAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleWidget
entryRuleWidget returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWidgetRule()); }
	iv_ruleWidget=ruleWidget
	{ $current=$iv_ruleWidget.current; }
	EOF;

// Rule Widget
ruleWidget returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Widget'
		{
			newLeafNode(otherlv_0, grammarAccess.getWidgetAccess().getWidgetKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWidgetAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWidgetRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.Upctforma.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getWidgetAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWidgetRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getWidgetAccess().getWidgettypeWidgetTypeCrossReference_3_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getWidgetAccess().getLeftCurlyBracketKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getWidgetAccess().getWidgetelementsContentElementParserRuleCall_4_1_0());
					}
					lv_widgetelements_5_0=ruleContentElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getWidgetRule());
						}
						add(
							$current,
							"widgetelements",
							lv_widgetelements_5_0,
							"org.xtext.Upctforma.ContentElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getWidgetAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getWidgetAccess().getWidgetelementsContentElementParserRuleCall_4_2_1_0());
						}
						lv_widgetelements_7_0=ruleContentElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getWidgetRule());
							}
							add(
								$current,
								"widgetelements",
								lv_widgetelements_7_0,
								"org.xtext.Upctforma.ContentElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getWidgetAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Text'
		{
			newLeafNode(otherlv_0, grammarAccess.getTextAccess().getTextKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTextAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTextAccess().getParagraphsParagraphParserRuleCall_2_0());
				}
				lv_paragraphs_2_0=ruleParagraph
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTextRule());
					}
					add(
						$current,
						"paragraphs",
						lv_paragraphs_2_0,
						"org.xtext.Upctforma.Paragraph");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getTextAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTextAccess().getParagraphsParagraphParserRuleCall_3_1_0());
					}
					lv_paragraphs_4_0=ruleParagraph
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTextRule());
						}
						add(
							$current,
							"paragraphs",
							lv_paragraphs_4_0,
							"org.xtext.Upctforma.Paragraph");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTextAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleComposite_Impl
entryRuleComposite_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComposite_ImplRule()); }
	iv_ruleComposite_Impl=ruleComposite_Impl
	{ $current=$iv_ruleComposite_Impl.current; }
	EOF;

// Rule Composite_Impl
ruleComposite_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getComposite_ImplAccess().getCompositeAction_0(),
					$current);
			}
		)
		otherlv_1='Composite'
		{
			newLeafNode(otherlv_1, grammarAccess.getComposite_ImplAccess().getCompositeKeyword_1());
		}
	)
;

// Entry rule entryRuleVideo
entryRuleVideo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVideoRule()); }
	iv_ruleVideo=ruleVideo
	{ $current=$iv_ruleVideo.current; }
	EOF;

// Rule Video
ruleVideo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVideoAccess().getVideoAction_0(),
					$current);
			}
		)
		otherlv_1='Video'
		{
			newLeafNode(otherlv_1, grammarAccess.getVideoAccess().getVideoKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getVideoAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='id'
			{
				newLeafNode(otherlv_3, grammarAccess.getVideoAccess().getIdKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVideoAccess().getIdEStringParserRuleCall_3_1_0());
					}
					lv_id_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVideoRule());
						}
						set(
							$current,
							"id",
							lv_id_4_0,
							"org.xtext.Upctforma.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getVideoAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSimpleElement_Impl
entryRuleSimpleElement_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleElement_ImplRule()); }
	iv_ruleSimpleElement_Impl=ruleSimpleElement_Impl
	{ $current=$iv_ruleSimpleElement_Impl.current; }
	EOF;

// Rule SimpleElement_Impl
ruleSimpleElement_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimpleElement_ImplAccess().getSimpleElementAction_0(),
					$current);
			}
		)
		otherlv_1='SimpleElement'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimpleElement_ImplAccess().getSimpleElementKeyword_1());
		}
	)
;

// Entry rule entryRulePlaceHolder
entryRulePlaceHolder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlaceHolderRule()); }
	iv_rulePlaceHolder=rulePlaceHolder
	{ $current=$iv_rulePlaceHolder.current; }
	EOF;

// Rule PlaceHolder
rulePlaceHolder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Placeholder'
		{
			newLeafNode(otherlv_0, grammarAccess.getPlaceHolderAccess().getPlaceholderKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPlaceHolderRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getPlaceHolderAccess().getTypeTypeCrossReference_1_0());
				}
				ruleEPrimitiveTypes
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleGame
entryRuleGame returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGameRule()); }
	iv_ruleGame=ruleGame
	{ $current=$iv_ruleGame.current; }
	EOF;

// Rule Game
ruleGame returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGameAccess().getGameAction_0(),
					$current);
			}
		)
		otherlv_1='Game'
		{
			newLeafNode(otherlv_1, grammarAccess.getGameAccess().getGameKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getGameAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='id'
			{
				newLeafNode(otherlv_3, grammarAccess.getGameAccess().getIdKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGameAccess().getIdEStringParserRuleCall_3_1_0());
					}
					lv_id_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGameRule());
						}
						set(
							$current,
							"id",
							lv_id_4_0,
							"org.xtext.Upctforma.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getGameAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleFieldValue
entryRuleFieldValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldValueRule()); }
	iv_ruleFieldValue=ruleFieldValue
	{ $current=$iv_ruleFieldValue.current; }
	EOF;

// Rule FieldValue
ruleFieldValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldValueAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldValueRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.Upctforma.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFieldValueAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldValueAccess().getFieldvalueContentElementParserRuleCall_2_0());
				}
				lv_fieldvalue_2_0=ruleContentElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldValueRule());
					}
					set(
						$current,
						"fieldvalue",
						lv_fieldvalue_2_0,
						"org.xtext.Upctforma.ContentElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRecordValue
entryRuleRecordValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecordValueRule()); }
	iv_ruleRecordValue=ruleRecordValue
	{ $current=$iv_ruleRecordValue.current; }
	EOF;

// Rule RecordValue
ruleRecordValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getRecordValueAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRecordValueAccess().getRecordvaluesFieldValueParserRuleCall_1_0());
				}
				lv_recordvalues_1_0=ruleFieldValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecordValueRule());
					}
					add(
						$current,
						"recordvalues",
						lv_recordvalues_1_0,
						"org.xtext.Upctforma.FieldValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getRecordValueAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRecordValueAccess().getRecordvaluesFieldValueParserRuleCall_2_1_0());
					}
					lv_recordvalues_3_0=ruleFieldValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRecordValueRule());
						}
						add(
							$current,
							"recordvalues",
							lv_recordvalues_3_0,
							"org.xtext.Upctforma.FieldValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getRecordValueAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleListValue
entryRuleListValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListValueRule()); }
	iv_ruleListValue=ruleListValue
	{ $current=$iv_ruleListValue.current; }
	EOF;

// Rule ListValue
ruleListValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getListValueAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListValueAccess().getListvaluesContentElementParserRuleCall_1_0());
				}
				lv_listvalues_1_0=ruleContentElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListValueRule());
					}
					add(
						$current,
						"listvalues",
						lv_listvalues_1_0,
						"org.xtext.Upctforma.ContentElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getListValueAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getListValueAccess().getListvaluesContentElementParserRuleCall_2_1_0());
					}
					lv_listvalues_3_0=ruleContentElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListValueRule());
						}
						add(
							$current,
							"listvalues",
							lv_listvalues_3_0,
							"org.xtext.Upctforma.ContentElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getListValueAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleWidgetType
entryRuleWidgetType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWidgetTypeRule()); }
	iv_ruleWidgetType=ruleWidgetType
	{ $current=$iv_ruleWidgetType.current; }
	EOF;

// Rule WidgetType
ruleWidgetType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getWidgetTypeAccess().getWidgetTypeAction_0(),
					$current);
			}
		)
		otherlv_1='widget'
		{
			newLeafNode(otherlv_1, grammarAccess.getWidgetTypeAccess().getWidgetKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWidgetTypeAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWidgetTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.Upctforma.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getWidgetTypeAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWidgetTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getWidgetTypeAccess().getWidgettypeelementsTypeCrossReference_4_0());
				}
				ruleEPrimitiveTypes
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getWidgetTypeAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWidgetTypeRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getWidgetTypeAccess().getWidgettypeelementsTypeCrossReference_5_1_0());
					}
					ruleEPrimitiveTypes
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getWidgetTypeAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleCompositeType_Impl
entryRuleCompositeType_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeType_ImplRule()); }
	iv_ruleCompositeType_Impl=ruleCompositeType_Impl
	{ $current=$iv_ruleCompositeType_Impl.current; }
	EOF;

// Rule CompositeType_Impl
ruleCompositeType_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCompositeType_ImplAccess().getCompositeTypeAction_0(),
					$current);
			}
		)
		otherlv_1='CompositeType'
		{
			newLeafNode(otherlv_1, grammarAccess.getCompositeType_ImplAccess().getCompositeTypeKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeType_ImplAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeType_ImplRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.Upctforma.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParagraph
entryRuleParagraph returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParagraphRule()); }
	iv_ruleParagraph=ruleParagraph
	{ $current=$iv_ruleParagraph.current; }
	EOF;

// Rule Paragraph
ruleParagraph returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParagraphAccess().getParagraphAction_0(),
					$current);
			}
		)
		(
			otherlv_1='p'
			{
				newLeafNode(otherlv_1, grammarAccess.getParagraphAccess().getPKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParagraphAccess().getTextEStringParserRuleCall_1_1_0());
					}
					lv_text_2_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParagraphRule());
						}
						set(
							$current,
							"text",
							lv_text_2_0,
							"org.xtext.Upctforma.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSection
entryRuleSection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSectionRule()); }
	iv_ruleSection=ruleSection
	{ $current=$iv_ruleSection.current; }
	EOF;

// Rule Section
ruleSection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSectionAccess().getSectionAction_0(),
					$current);
			}
		)
		otherlv_1='Section'
		{
			newLeafNode(otherlv_1, grammarAccess.getSectionAccess().getSectionKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSectionAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSectionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.Upctforma.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getSectionAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='image'
			{
				newLeafNode(otherlv_4, grammarAccess.getSectionAccess().getImageKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSectionAccess().getImageEStringParserRuleCall_4_1_0());
					}
					lv_image_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSectionRule());
						}
						set(
							$current,
							"image",
							lv_image_5_0,
							"org.xtext.Upctforma.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='title'
			{
				newLeafNode(otherlv_6, grammarAccess.getSectionAccess().getTitleKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSectionAccess().getTitleEStringParserRuleCall_5_1_0());
					}
					lv_title_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSectionRule());
						}
						set(
							$current,
							"title",
							lv_title_7_0,
							"org.xtext.Upctforma.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSectionAccess().getRowsRowParserRuleCall_6_0_0());
					}
					lv_rows_8_0=ruleRow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSectionRule());
						}
						add(
							$current,
							"rows",
							lv_rows_8_0,
							"org.xtext.Upctforma.Row");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getSectionAccess().getCommaKeyword_6_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSectionAccess().getRowsRowParserRuleCall_6_1_1_0());
						}
						lv_rows_10_0=ruleRow
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSectionRule());
							}
							add(
								$current,
								"rows",
								lv_rows_10_0,
								"org.xtext.Upctforma.Row");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getSectionAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleEPrimitiveTypes
entryRuleEPrimitiveTypes returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEPrimitiveTypesRule()); }
	iv_ruleEPrimitiveTypes=ruleEPrimitiveTypes
	{ $current=$iv_ruleEPrimitiveTypes.current.getText(); }
	EOF;

// Rule EPrimitiveTypes
ruleEPrimitiveTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEPrimitiveTypesAccess().getEStringParserRuleCall_0());
		}
		this_EString_0=ruleEString
		{
			$current.merge(this_EString_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_PrimitiveTypes_1=RULE_PRIMITIVETYPES
		{
			$current.merge(this_PrimitiveTypes_1);
		}
		{
			newLeafNode(this_PrimitiveTypes_1, grammarAccess.getEPrimitiveTypesAccess().getPrimitiveTypesTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleSimpleType
entryRuleSimpleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleTypeRule()); }
	iv_ruleSimpleType=ruleSimpleType
	{ $current=$iv_ruleSimpleType.current; }
	EOF;

// Rule SimpleType
ruleSimpleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimpleTypeAccess().getSimpleTypeAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_PRIMITIVETYPES
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSimpleTypeAccess().getNamePrimitiveTypesTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.Upctforma.PrimitiveTypes");
				}
			)
		)
	)
;

// Entry rule entryRuleRecordType
entryRuleRecordType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecordTypeRule()); }
	iv_ruleRecordType=ruleRecordType
	{ $current=$iv_ruleRecordType.current; }
	EOF;

// Rule RecordType
ruleRecordType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRecordTypeAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecordTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.Upctforma.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRecordTypeAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRecordTypeAccess().getRecordtypeFieldParserRuleCall_2_0());
				}
				lv_recordtype_2_0=ruleField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecordTypeRule());
					}
					add(
						$current,
						"recordtype",
						lv_recordtype_2_0,
						"org.xtext.Upctforma.Field");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getRecordTypeAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRecordTypeAccess().getRecordtypeFieldParserRuleCall_3_1_0());
					}
					lv_recordtype_4_0=ruleField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRecordTypeRule());
						}
						add(
							$current,
							"recordtype",
							lv_recordtype_4_0,
							"org.xtext.Upctforma.Field");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getRecordTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.Upctforma.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFieldAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getFieldAccess().getFieldtypeTypeCrossReference_2_0());
				}
				ruleEPrimitiveTypes
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleListType
entryRuleListType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListTypeRule()); }
	iv_ruleListType=ruleListType
	{ $current=$iv_ruleListType.current; }
	EOF;

// Rule ListType
ruleListType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getListTypeAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.Upctforma.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getListTypeAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='list_of'
		{
			newLeafNode(otherlv_2, grammarAccess.getListTypeAccess().getList_ofKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getListTypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getListTypeAccess().getListtypeTypeCrossReference_3_0());
				}
				ruleEPrimitiveTypes
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getListTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

RULE_PRIMITIVETYPES : ('VideoType'|'ImageType'|'TextType'|'GameType'|'Any');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
