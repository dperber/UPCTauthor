/**
 * generated by Xtext 2.12.0
 */
package org.xtext.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.services.UpctformaGrammarAccess;
import upctforma.ContentDefinition;
import upctforma.Import;
import upctforma.Row;
import upctforma.TemplateDef;
import upctforma.Type;
import upctforma.Unit;

@SuppressWarnings("all")
public class UpctformaFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private UpctformaGrammarAccess _upctformaGrammarAccess;
  
  protected void _format(final ContentDefinition contentDefinition, @Extension final IFormattableDocument document) {
    EList<Import> _imports = contentDefinition.getImports();
    for (final Import _import : _imports) {
      document.<Import>format(_import);
    }
    EList<Type> _types = contentDefinition.getTypes();
    for (final Type type : _types) {
      document.<Type>format(type);
    }
    EList<TemplateDef> _templates = contentDefinition.getTemplates();
    for (final TemplateDef templateDef : _templates) {
      document.<TemplateDef>format(templateDef);
    }
    document.<Unit>format(contentDefinition.getUnit());
  }
  
  protected void _format(final TemplateDef templateDef, @Extension final IFormattableDocument document) {
    EList<Row> _rows = templateDef.getRows();
    for (final Row row : _rows) {
      document.<Row>format(row);
    }
  }
  
  public void format(final Object contentDefinition, final IFormattableDocument document) {
    if (contentDefinition instanceof XtextResource) {
      _format((XtextResource)contentDefinition, document);
      return;
    } else if (contentDefinition instanceof ContentDefinition) {
      _format((ContentDefinition)contentDefinition, document);
      return;
    } else if (contentDefinition instanceof TemplateDef) {
      _format((TemplateDef)contentDefinition, document);
      return;
    } else if (contentDefinition instanceof EObject) {
      _format((EObject)contentDefinition, document);
      return;
    } else if (contentDefinition == null) {
      _format((Void)null, document);
      return;
    } else if (contentDefinition != null) {
      _format(contentDefinition, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(contentDefinition, document).toString());
    }
  }
}
