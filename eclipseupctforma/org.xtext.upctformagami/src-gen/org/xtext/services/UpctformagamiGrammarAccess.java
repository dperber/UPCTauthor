/*
 * generated by Xtext 2.12.0
 */
package org.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class UpctformagamiGrammarAccess extends AbstractGrammarElementFinder {
	
	public class GamificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Gamification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGamificationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGamificationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cImportKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cImportsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cImportsImportParserRuleCall_3_1_0 = (RuleCall)cImportsAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cImportsAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cImportsImportParserRuleCall_3_2_1_0 = (RuleCall)cImportsAssignment_3_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBadgesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cBadgesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cBadgesBadgeParserRuleCall_4_2_0 = (RuleCall)cBadgesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cBadgesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cBadgesBadgeParserRuleCall_4_3_1_0 = (RuleCall)cBadgesAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cWidgetsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cWidgetsWidgetDefPointParserRuleCall_5_0_0 = (RuleCall)cWidgetsAssignment_5_0.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cWidgetsAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cWidgetsWidgetDefPointParserRuleCall_5_1_1_0 = (RuleCall)cWidgetsAssignment_5_1_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cUnitsAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cUnitsUnitPointParserRuleCall_6_0_0 = (RuleCall)cUnitsAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cCommaKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cUnitsAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cUnitsUnitPointParserRuleCall_6_1_1_0 = (RuleCall)cUnitsAssignment_6_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Gamification:
		//	{Gamification}
		//	'Gamification'
		//	'{' ('import' imports+=Import ("," imports+=Import)* ';')? ('badges' '{' badges+=Badge ("," badges+=Badge)* '}')?
		//	(widgets+=WidgetDefPoint ("," widgets+=WidgetDefPoint)*)? (units+=UnitPoint ("," units+=UnitPoint)*)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Gamification} 'Gamification' '{' ('import' imports+=Import ("," imports+=Import)* ';')? ('badges' '{' badges+=Badge
		//("," badges+=Badge)* '}')? (widgets+=WidgetDefPoint ("," widgets+=WidgetDefPoint)*)? (units+=UnitPoint (","
		//units+=UnitPoint)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Gamification}
		public Action getGamificationAction_0() { return cGamificationAction_0; }
		
		//'Gamification'
		public Keyword getGamificationKeyword_1() { return cGamificationKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('import' imports+=Import ("," imports+=Import)* ';')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'import'
		public Keyword getImportKeyword_3_0() { return cImportKeyword_3_0; }
		
		//imports+=Import
		public Assignment getImportsAssignment_3_1() { return cImportsAssignment_3_1; }
		
		//Import
		public RuleCall getImportsImportParserRuleCall_3_1_0() { return cImportsImportParserRuleCall_3_1_0; }
		
		//("," imports+=Import)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//imports+=Import
		public Assignment getImportsAssignment_3_2_1() { return cImportsAssignment_3_2_1; }
		
		//Import
		public RuleCall getImportsImportParserRuleCall_3_2_1_0() { return cImportsImportParserRuleCall_3_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3_3() { return cSemicolonKeyword_3_3; }
		
		//('badges' '{' badges+=Badge ("," badges+=Badge)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'badges'
		public Keyword getBadgesKeyword_4_0() { return cBadgesKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//badges+=Badge
		public Assignment getBadgesAssignment_4_2() { return cBadgesAssignment_4_2; }
		
		//Badge
		public RuleCall getBadgesBadgeParserRuleCall_4_2_0() { return cBadgesBadgeParserRuleCall_4_2_0; }
		
		//("," badges+=Badge)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//badges+=Badge
		public Assignment getBadgesAssignment_4_3_1() { return cBadgesAssignment_4_3_1; }
		
		//Badge
		public RuleCall getBadgesBadgeParserRuleCall_4_3_1_0() { return cBadgesBadgeParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//(widgets+=WidgetDefPoint ("," widgets+=WidgetDefPoint)*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//widgets+=WidgetDefPoint
		public Assignment getWidgetsAssignment_5_0() { return cWidgetsAssignment_5_0; }
		
		//WidgetDefPoint
		public RuleCall getWidgetsWidgetDefPointParserRuleCall_5_0_0() { return cWidgetsWidgetDefPointParserRuleCall_5_0_0; }
		
		//("," widgets+=WidgetDefPoint)*
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//","
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }
		
		//widgets+=WidgetDefPoint
		public Assignment getWidgetsAssignment_5_1_1() { return cWidgetsAssignment_5_1_1; }
		
		//WidgetDefPoint
		public RuleCall getWidgetsWidgetDefPointParserRuleCall_5_1_1_0() { return cWidgetsWidgetDefPointParserRuleCall_5_1_1_0; }
		
		//(units+=UnitPoint ("," units+=UnitPoint)*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//units+=UnitPoint
		public Assignment getUnitsAssignment_6_0() { return cUnitsAssignment_6_0; }
		
		//UnitPoint
		public RuleCall getUnitsUnitPointParserRuleCall_6_0_0() { return cUnitsUnitPointParserRuleCall_6_0_0; }
		
		//("," units+=UnitPoint)*
		public Group getGroup_6_1() { return cGroup_6_1; }
		
		//","
		public Keyword getCommaKeyword_6_1_0() { return cCommaKeyword_6_1_0; }
		
		//units+=UnitPoint
		public Assignment getUnitsAssignment_6_1_1() { return cUnitsAssignment_6_1_1; }
		
		//UnitPoint
		public RuleCall getUnitsUnitPointParserRuleCall_6_1_1_0() { return cUnitsUnitPointParserRuleCall_6_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cImportAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0 = (RuleCall)cImportedNamespaceAssignment_1.eContents().get(0);
		
		//Import:
		//	{Import} importedNamespace=QualifiedNameWithWildcard;
		@Override public ParserRule getRule() { return rule; }
		
		//{Import} importedNamespace=QualifiedNameWithWildcard
		public Group getGroup() { return cGroup; }
		
		//{Import}
		public Action getImportAction_0() { return cImportAction_0; }
		
		//importedNamespace=QualifiedNameWithWildcard
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }
		
		//QualifiedNameWithWildcard
		public RuleCall getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0() { return cImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0; }
	}
	public class QualifiedNameWithWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.QualifiedNameWithWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cQualifiedNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopAsteriskKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//QualifiedNameWithWildcard:
		//	QualifiedName '.*'?;
		@Override public ParserRule getRule() { return rule; }
		
		//QualifiedName '.*'?
		public Group getGroup() { return cGroup; }
		
		//QualifiedName
		public RuleCall getQualifiedNameParserRuleCall_0() { return cQualifiedNameParserRuleCall_0; }
		
		//'.*'?
		public Keyword getFullStopAsteriskKeyword_1() { return cFullStopAsteriskKeyword_1; }
	}
	public class WidgetDefPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.WidgetDefPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWidgetDefPointAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cWidgetPointKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cWidgetKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cWidgetrefAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cWidgetrefWidgetTypeCrossReference_3_1_0 = (CrossReference)cWidgetrefAssignment_3_1.eContents().get(0);
		private final RuleCall cWidgetrefWidgetTypeEStringParserRuleCall_3_1_0_1 = (RuleCall)cWidgetrefWidgetTypeCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cWidgetrefAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cWidgetrefWidgetTypeCrossReference_3_2_1_0 = (CrossReference)cWidgetrefAssignment_3_2_1.eContents().get(0);
		private final RuleCall cWidgetrefWidgetTypeEStringParserRuleCall_3_2_1_0_1 = (RuleCall)cWidgetrefWidgetTypeCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cUnitKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cUnitrefAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cUnitrefUnitCrossReference_4_1_0 = (CrossReference)cUnitrefAssignment_4_1.eContents().get(0);
		private final RuleCall cUnitrefUnitEStringParserRuleCall_4_1_0_1 = (RuleCall)cUnitrefUnitCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cUnitrefAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cUnitrefUnitCrossReference_4_2_1_0 = (CrossReference)cUnitrefAssignment_4_2_1.eContents().get(0);
		private final RuleCall cUnitrefUnitEStringParserRuleCall_4_2_1_0_1 = (RuleCall)cUnitrefUnitCrossReference_4_2_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cPointswidgetdefAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cPointswidgetdefPointParserRuleCall_5_0_0 = (RuleCall)cPointswidgetdefAssignment_5_0.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cPointswidgetdefAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cPointswidgetdefPointParserRuleCall_5_1_1_0 = (RuleCall)cPointswidgetdefAssignment_5_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//WidgetDefPoint:
		//	{WidgetDefPoint}
		//	'WidgetPoint'
		//	'{' ('widget' widgetref+=[upctforma::WidgetType|EString] ("," widgetref+=[upctforma::WidgetType|EString])*)? ('unit'
		//	unitref+=[upctforma::Unit|EString] ("," unitref+=[upctforma::Unit|EString])*)? (pointswidgetdef+=Point (","
		//	pointswidgetdef+=Point)*)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{WidgetDefPoint} 'WidgetPoint' '{' ('widget' widgetref+=[upctforma::WidgetType|EString] (","
		//widgetref+=[upctforma::WidgetType|EString])*)? ('unit' unitref+=[upctforma::Unit|EString] (","
		//unitref+=[upctforma::Unit|EString])*)? (pointswidgetdef+=Point ("," pointswidgetdef+=Point)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{WidgetDefPoint}
		public Action getWidgetDefPointAction_0() { return cWidgetDefPointAction_0; }
		
		//'WidgetPoint'
		public Keyword getWidgetPointKeyword_1() { return cWidgetPointKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('widget' widgetref+=[upctforma::WidgetType|EString] ("," widgetref+=[upctforma::WidgetType|EString])*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'widget'
		public Keyword getWidgetKeyword_3_0() { return cWidgetKeyword_3_0; }
		
		//widgetref+=[upctforma::WidgetType|EString]
		public Assignment getWidgetrefAssignment_3_1() { return cWidgetrefAssignment_3_1; }
		
		//[upctforma::WidgetType|EString]
		public CrossReference getWidgetrefWidgetTypeCrossReference_3_1_0() { return cWidgetrefWidgetTypeCrossReference_3_1_0; }
		
		//EString
		public RuleCall getWidgetrefWidgetTypeEStringParserRuleCall_3_1_0_1() { return cWidgetrefWidgetTypeEStringParserRuleCall_3_1_0_1; }
		
		//("," widgetref+=[upctforma::WidgetType|EString])*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }
		
		//widgetref+=[upctforma::WidgetType|EString]
		public Assignment getWidgetrefAssignment_3_2_1() { return cWidgetrefAssignment_3_2_1; }
		
		//[upctforma::WidgetType|EString]
		public CrossReference getWidgetrefWidgetTypeCrossReference_3_2_1_0() { return cWidgetrefWidgetTypeCrossReference_3_2_1_0; }
		
		//EString
		public RuleCall getWidgetrefWidgetTypeEStringParserRuleCall_3_2_1_0_1() { return cWidgetrefWidgetTypeEStringParserRuleCall_3_2_1_0_1; }
		
		//('unit' unitref+=[upctforma::Unit|EString] ("," unitref+=[upctforma::Unit|EString])*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'unit'
		public Keyword getUnitKeyword_4_0() { return cUnitKeyword_4_0; }
		
		//unitref+=[upctforma::Unit|EString]
		public Assignment getUnitrefAssignment_4_1() { return cUnitrefAssignment_4_1; }
		
		//[upctforma::Unit|EString]
		public CrossReference getUnitrefUnitCrossReference_4_1_0() { return cUnitrefUnitCrossReference_4_1_0; }
		
		//EString
		public RuleCall getUnitrefUnitEStringParserRuleCall_4_1_0_1() { return cUnitrefUnitEStringParserRuleCall_4_1_0_1; }
		
		//("," unitref+=[upctforma::Unit|EString])*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//unitref+=[upctforma::Unit|EString]
		public Assignment getUnitrefAssignment_4_2_1() { return cUnitrefAssignment_4_2_1; }
		
		//[upctforma::Unit|EString]
		public CrossReference getUnitrefUnitCrossReference_4_2_1_0() { return cUnitrefUnitCrossReference_4_2_1_0; }
		
		//EString
		public RuleCall getUnitrefUnitEStringParserRuleCall_4_2_1_0_1() { return cUnitrefUnitEStringParserRuleCall_4_2_1_0_1; }
		
		//(pointswidgetdef+=Point ("," pointswidgetdef+=Point)*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//pointswidgetdef+=Point
		public Assignment getPointswidgetdefAssignment_5_0() { return cPointswidgetdefAssignment_5_0; }
		
		//Point
		public RuleCall getPointswidgetdefPointParserRuleCall_5_0_0() { return cPointswidgetdefPointParserRuleCall_5_0_0; }
		
		//("," pointswidgetdef+=Point)*
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//","
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }
		
		//pointswidgetdef+=Point
		public Assignment getPointswidgetdefAssignment_5_1_1() { return cPointswidgetdefAssignment_5_1_1; }
		
		//Point
		public RuleCall getPointswidgetdefPointParserRuleCall_5_1_1_0() { return cPointswidgetdefPointParserRuleCall_5_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class BadgeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Badge");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBadgeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBadgeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDescriptionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_4_1_0 = (RuleCall)cDescriptionAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cUrlKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cUrlAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cUrlEStringParserRuleCall_5_1_0 = (RuleCall)cUrlAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Badge:
		//	{Badge}
		//	'Badge'
		//	name=EString
		//	'{' ('description' description=EString)? ('url' url=EString)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Badge} 'Badge' name=EString '{' ('description' description=EString)? ('url' url=EString)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Badge}
		public Action getBadgeAction_0() { return cBadgeAction_0; }
		
		//'Badge'
		public Keyword getBadgeKeyword_1() { return cBadgeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('description' description=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'description'
		public Keyword getDescriptionKeyword_4_0() { return cDescriptionKeyword_4_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_4_1() { return cDescriptionAssignment_4_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_4_1_0() { return cDescriptionEStringParserRuleCall_4_1_0; }
		
		//('url' url=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'url'
		public Keyword getUrlKeyword_5_0() { return cUrlKeyword_5_0; }
		
		//url=EString
		public Assignment getUrlAssignment_5_1() { return cUrlAssignment_5_1; }
		
		//EString
		public RuleCall getUrlEStringParserRuleCall_5_1_0() { return cUrlEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class UnitPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.UnitPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUnitPointAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUnitPointKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cStateKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cStateAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cStateTypeStateEnumRuleCall_3_1_0 = (RuleCall)cStateAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cContentunitKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cUnitrefAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cUnitrefUnitCrossReference_4_1_0 = (CrossReference)cUnitrefAssignment_4_1.eContents().get(0);
		private final RuleCall cUnitrefUnitEStringParserRuleCall_4_1_0_1 = (RuleCall)cUnitrefUnitCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEvaluationunitKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cEvalrefAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cEvalrefEvaluationUnitCrossReference_5_1_0 = (CrossReference)cEvalrefAssignment_5_1.eContents().get(0);
		private final RuleCall cEvalrefEvaluationUnitEStringParserRuleCall_5_1_0_1 = (RuleCall)cEvalrefEvaluationUnitCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cURLKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cURLAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cURLEStringParserRuleCall_6_1_0 = (RuleCall)cURLAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cImageKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cImageAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cImageEStringParserRuleCall_7_1_0 = (RuleCall)cImageAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Assignment cDefbadgesAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final RuleCall cDefbadgesBadgeUnitParserRuleCall_8_0_0 = (RuleCall)cDefbadgesAssignment_8_0.eContents().get(0);
		private final Group cGroup_8_1 = (Group)cGroup_8.eContents().get(1);
		private final Keyword cCommaKeyword_8_1_0 = (Keyword)cGroup_8_1.eContents().get(0);
		private final Assignment cDefbadgesAssignment_8_1_1 = (Assignment)cGroup_8_1.eContents().get(1);
		private final RuleCall cDefbadgesBadgeUnitParserRuleCall_8_1_1_0 = (RuleCall)cDefbadgesAssignment_8_1_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Assignment cPointsunitAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final RuleCall cPointsunitPointParserRuleCall_9_0_0 = (RuleCall)cPointsunitAssignment_9_0.eContents().get(0);
		private final Group cGroup_9_1 = (Group)cGroup_9.eContents().get(1);
		private final Keyword cCommaKeyword_9_1_0 = (Keyword)cGroup_9_1.eContents().get(0);
		private final Assignment cPointsunitAssignment_9_1_1 = (Assignment)cGroup_9_1.eContents().get(1);
		private final RuleCall cPointsunitPointParserRuleCall_9_1_1_0 = (RuleCall)cPointsunitAssignment_9_1_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cNextmissionsKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cMissionsAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cMissionsMissionParserRuleCall_10_2_0 = (RuleCall)cMissionsAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cMissionsAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cMissionsMissionParserRuleCall_10_3_1_0 = (RuleCall)cMissionsAssignment_10_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//UnitPoint:
		//	{UnitPoint}
		//	'UnitPoint'
		//	'{' ('state' state=TypeState)? ('contentunit' unitref=[upctforma::Unit|EString])? ('evaluationunit'
		//	evalref=[upctformaevalua::EvaluationUnit|EString])? ('URL' URL=EString)? ('image' image=EString)?
		//	(defbadges+=BadgeUnit ("," defbadges+=BadgeUnit)*)? (pointsunit+=Point ("," pointsunit+=Point)*)? ('nextmissions' '{'
		//	missions+=Mission ("," missions+=Mission)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{UnitPoint} 'UnitPoint' '{' ('state' state=TypeState)? ('contentunit' unitref=[upctforma::Unit|EString])?
		//('evaluationunit' evalref=[upctformaevalua::EvaluationUnit|EString])? ('URL' URL=EString)? ('image' image=EString)?
		//(defbadges+=BadgeUnit ("," defbadges+=BadgeUnit)*)? (pointsunit+=Point ("," pointsunit+=Point)*)? ('nextmissions' '{'
		//missions+=Mission ("," missions+=Mission)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{UnitPoint}
		public Action getUnitPointAction_0() { return cUnitPointAction_0; }
		
		//'UnitPoint'
		public Keyword getUnitPointKeyword_1() { return cUnitPointKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('state' state=TypeState)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'state'
		public Keyword getStateKeyword_3_0() { return cStateKeyword_3_0; }
		
		//state=TypeState
		public Assignment getStateAssignment_3_1() { return cStateAssignment_3_1; }
		
		//TypeState
		public RuleCall getStateTypeStateEnumRuleCall_3_1_0() { return cStateTypeStateEnumRuleCall_3_1_0; }
		
		//('contentunit' unitref=[upctforma::Unit|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'contentunit'
		public Keyword getContentunitKeyword_4_0() { return cContentunitKeyword_4_0; }
		
		//unitref=[upctforma::Unit|EString]
		public Assignment getUnitrefAssignment_4_1() { return cUnitrefAssignment_4_1; }
		
		//[upctforma::Unit|EString]
		public CrossReference getUnitrefUnitCrossReference_4_1_0() { return cUnitrefUnitCrossReference_4_1_0; }
		
		//EString
		public RuleCall getUnitrefUnitEStringParserRuleCall_4_1_0_1() { return cUnitrefUnitEStringParserRuleCall_4_1_0_1; }
		
		//('evaluationunit' evalref=[upctformaevalua::EvaluationUnit|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'evaluationunit'
		public Keyword getEvaluationunitKeyword_5_0() { return cEvaluationunitKeyword_5_0; }
		
		//evalref=[upctformaevalua::EvaluationUnit|EString]
		public Assignment getEvalrefAssignment_5_1() { return cEvalrefAssignment_5_1; }
		
		//[upctformaevalua::EvaluationUnit|EString]
		public CrossReference getEvalrefEvaluationUnitCrossReference_5_1_0() { return cEvalrefEvaluationUnitCrossReference_5_1_0; }
		
		//EString
		public RuleCall getEvalrefEvaluationUnitEStringParserRuleCall_5_1_0_1() { return cEvalrefEvaluationUnitEStringParserRuleCall_5_1_0_1; }
		
		//('URL' URL=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'URL'
		public Keyword getURLKeyword_6_0() { return cURLKeyword_6_0; }
		
		//URL=EString
		public Assignment getURLAssignment_6_1() { return cURLAssignment_6_1; }
		
		//EString
		public RuleCall getURLEStringParserRuleCall_6_1_0() { return cURLEStringParserRuleCall_6_1_0; }
		
		//('image' image=EString)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'image'
		public Keyword getImageKeyword_7_0() { return cImageKeyword_7_0; }
		
		//image=EString
		public Assignment getImageAssignment_7_1() { return cImageAssignment_7_1; }
		
		//EString
		public RuleCall getImageEStringParserRuleCall_7_1_0() { return cImageEStringParserRuleCall_7_1_0; }
		
		//(defbadges+=BadgeUnit ("," defbadges+=BadgeUnit)*)?
		public Group getGroup_8() { return cGroup_8; }
		
		//defbadges+=BadgeUnit
		public Assignment getDefbadgesAssignment_8_0() { return cDefbadgesAssignment_8_0; }
		
		//BadgeUnit
		public RuleCall getDefbadgesBadgeUnitParserRuleCall_8_0_0() { return cDefbadgesBadgeUnitParserRuleCall_8_0_0; }
		
		//("," defbadges+=BadgeUnit)*
		public Group getGroup_8_1() { return cGroup_8_1; }
		
		//","
		public Keyword getCommaKeyword_8_1_0() { return cCommaKeyword_8_1_0; }
		
		//defbadges+=BadgeUnit
		public Assignment getDefbadgesAssignment_8_1_1() { return cDefbadgesAssignment_8_1_1; }
		
		//BadgeUnit
		public RuleCall getDefbadgesBadgeUnitParserRuleCall_8_1_1_0() { return cDefbadgesBadgeUnitParserRuleCall_8_1_1_0; }
		
		//(pointsunit+=Point ("," pointsunit+=Point)*)?
		public Group getGroup_9() { return cGroup_9; }
		
		//pointsunit+=Point
		public Assignment getPointsunitAssignment_9_0() { return cPointsunitAssignment_9_0; }
		
		//Point
		public RuleCall getPointsunitPointParserRuleCall_9_0_0() { return cPointsunitPointParserRuleCall_9_0_0; }
		
		//("," pointsunit+=Point)*
		public Group getGroup_9_1() { return cGroup_9_1; }
		
		//","
		public Keyword getCommaKeyword_9_1_0() { return cCommaKeyword_9_1_0; }
		
		//pointsunit+=Point
		public Assignment getPointsunitAssignment_9_1_1() { return cPointsunitAssignment_9_1_1; }
		
		//Point
		public RuleCall getPointsunitPointParserRuleCall_9_1_1_0() { return cPointsunitPointParserRuleCall_9_1_1_0; }
		
		//('nextmissions' '{' missions+=Mission ("," missions+=Mission)* '}')?
		public Group getGroup_10() { return cGroup_10; }
		
		//'nextmissions'
		public Keyword getNextmissionsKeyword_10_0() { return cNextmissionsKeyword_10_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }
		
		//missions+=Mission
		public Assignment getMissionsAssignment_10_2() { return cMissionsAssignment_10_2; }
		
		//Mission
		public RuleCall getMissionsMissionParserRuleCall_10_2_0() { return cMissionsMissionParserRuleCall_10_2_0; }
		
		//("," missions+=Mission)*
		public Group getGroup_10_3() { return cGroup_10_3; }
		
		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }
		
		//missions+=Mission
		public Assignment getMissionsAssignment_10_3_1() { return cMissionsAssignment_10_3_1; }
		
		//Mission
		public RuleCall getMissionsMissionParserRuleCall_10_3_1_0() { return cMissionsMissionParserRuleCall_10_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_4() { return cRightCurlyBracketKeyword_10_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class PointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Point");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPointAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPointKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTypeTypeRuleEnumRuleCall_3_1_0 = (RuleCall)cTypeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPointsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPointsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPointsEIntParserRuleCall_4_1_0 = (RuleCall)cPointsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAttemptKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAttemptAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAttemptEIntParserRuleCall_5_1_0 = (RuleCall)cAttemptAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cInitialScoreKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cInitialScoreAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cInitialScoreEDoubleParserRuleCall_6_1_0 = (RuleCall)cInitialScoreAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cFinalScoreKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cFinalScoreAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cFinalScoreEDoubleParserRuleCall_7_1_0 = (RuleCall)cFinalScoreAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Point:
		//	{Point}
		//	'Point'
		//	'{' ('type' type=TypeRule)? ('points' points=EInt)? ('attempt' attempt=EInt)? ('InitialScore' InitialScore=EDouble)?
		//	('FinalScore' FinalScore=EDouble)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Point} 'Point' '{' ('type' type=TypeRule)? ('points' points=EInt)? ('attempt' attempt=EInt)? ('InitialScore'
		//InitialScore=EDouble)? ('FinalScore' FinalScore=EDouble)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Point}
		public Action getPointAction_0() { return cPointAction_0; }
		
		//'Point'
		public Keyword getPointKeyword_1() { return cPointKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('type' type=TypeRule)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'type'
		public Keyword getTypeKeyword_3_0() { return cTypeKeyword_3_0; }
		
		//type=TypeRule
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//TypeRule
		public RuleCall getTypeTypeRuleEnumRuleCall_3_1_0() { return cTypeTypeRuleEnumRuleCall_3_1_0; }
		
		//('points' points=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'points'
		public Keyword getPointsKeyword_4_0() { return cPointsKeyword_4_0; }
		
		//points=EInt
		public Assignment getPointsAssignment_4_1() { return cPointsAssignment_4_1; }
		
		//EInt
		public RuleCall getPointsEIntParserRuleCall_4_1_0() { return cPointsEIntParserRuleCall_4_1_0; }
		
		//('attempt' attempt=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'attempt'
		public Keyword getAttemptKeyword_5_0() { return cAttemptKeyword_5_0; }
		
		//attempt=EInt
		public Assignment getAttemptAssignment_5_1() { return cAttemptAssignment_5_1; }
		
		//EInt
		public RuleCall getAttemptEIntParserRuleCall_5_1_0() { return cAttemptEIntParserRuleCall_5_1_0; }
		
		//('InitialScore' InitialScore=EDouble)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'InitialScore'
		public Keyword getInitialScoreKeyword_6_0() { return cInitialScoreKeyword_6_0; }
		
		//InitialScore=EDouble
		public Assignment getInitialScoreAssignment_6_1() { return cInitialScoreAssignment_6_1; }
		
		//EDouble
		public RuleCall getInitialScoreEDoubleParserRuleCall_6_1_0() { return cInitialScoreEDoubleParserRuleCall_6_1_0; }
		
		//('FinalScore' FinalScore=EDouble)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'FinalScore'
		public Keyword getFinalScoreKeyword_7_0() { return cFinalScoreKeyword_7_0; }
		
		//FinalScore=EDouble
		public Assignment getFinalScoreAssignment_7_1() { return cFinalScoreAssignment_7_1; }
		
		//EDouble
		public RuleCall getFinalScoreEDoubleParserRuleCall_7_1_0() { return cFinalScoreEDoubleParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EDouble ecore::EDouble:
		//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E' | 'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E' | 'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'E' | 'e'
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class BadgeUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.BadgeUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBadgeUnitAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBadgeUnitKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTypeTypeRuleEnumRuleCall_3_1_0 = (RuleCall)cTypeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cBadgeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBadgeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cBadgeBadgeCrossReference_4_1_0 = (CrossReference)cBadgeAssignment_4_1.eContents().get(0);
		private final RuleCall cBadgeBadgeEStringParserRuleCall_4_1_0_1 = (RuleCall)cBadgeBadgeCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//BadgeUnit:
		//	{BadgeUnit}
		//	'BadgeUnit'
		//	'{' ('type' type=TypeRule)? ('badge' badge=[Badge|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{BadgeUnit} 'BadgeUnit' '{' ('type' type=TypeRule)? ('badge' badge=[Badge|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//{BadgeUnit}
		public Action getBadgeUnitAction_0() { return cBadgeUnitAction_0; }
		
		//'BadgeUnit'
		public Keyword getBadgeUnitKeyword_1() { return cBadgeUnitKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('type' type=TypeRule)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'type'
		public Keyword getTypeKeyword_3_0() { return cTypeKeyword_3_0; }
		
		//type=TypeRule
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//TypeRule
		public RuleCall getTypeTypeRuleEnumRuleCall_3_1_0() { return cTypeTypeRuleEnumRuleCall_3_1_0; }
		
		//('badge' badge=[Badge|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'badge'
		public Keyword getBadgeKeyword_4_0() { return cBadgeKeyword_4_0; }
		
		//badge=[Badge|EString]
		public Assignment getBadgeAssignment_4_1() { return cBadgeAssignment_4_1; }
		
		//[Badge|EString]
		public CrossReference getBadgeBadgeCrossReference_4_1_0() { return cBadgeBadgeCrossReference_4_1_0; }
		
		//EString
		public RuleCall getBadgeBadgeEStringParserRuleCall_4_1_0_1() { return cBadgeBadgeEStringParserRuleCall_4_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class MissionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Mission");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMissionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMissionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTypeTypeMissionsEnumRuleCall_3_1_0 = (RuleCall)cTypeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInitialScoreKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInitialScoreAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cInitialScoreEDoubleParserRuleCall_4_1_0 = (RuleCall)cInitialScoreAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cFinalScoreKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cFinalScoreAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cFinalScoreEDoubleParserRuleCall_5_1_0 = (RuleCall)cFinalScoreAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cNextunitKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cNextunitAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cNextunitUnitCrossReference_6_1_0 = (CrossReference)cNextunitAssignment_6_1.eContents().get(0);
		private final RuleCall cNextunitUnitEStringParserRuleCall_6_1_0_1 = (RuleCall)cNextunitUnitCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cNextevalKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cNextevalAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cNextevalEvaluationUnitCrossReference_7_1_0 = (CrossReference)cNextevalAssignment_7_1.eContents().get(0);
		private final RuleCall cNextevalEvaluationUnitEStringParserRuleCall_7_1_0_1 = (RuleCall)cNextevalEvaluationUnitCrossReference_7_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Mission:
		//	{Mission}
		//	'Mission'
		//	'{' ('type' type=TypeMissions)? ('InitialScore' InitialScore=EDouble)? ('FinalScore' FinalScore=EDouble)? ('nextunit'
		//	nextunit=[upctforma::Unit|EString])? ('nexteval' nexteval=[upctformaevalua::EvaluationUnit|EString])?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Mission} 'Mission' '{' ('type' type=TypeMissions)? ('InitialScore' InitialScore=EDouble)? ('FinalScore'
		//FinalScore=EDouble)? ('nextunit' nextunit=[upctforma::Unit|EString])? ('nexteval'
		//nexteval=[upctformaevalua::EvaluationUnit|EString])? '}'
		public Group getGroup() { return cGroup; }
		
		//{Mission}
		public Action getMissionAction_0() { return cMissionAction_0; }
		
		//'Mission'
		public Keyword getMissionKeyword_1() { return cMissionKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('type' type=TypeMissions)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'type'
		public Keyword getTypeKeyword_3_0() { return cTypeKeyword_3_0; }
		
		//type=TypeMissions
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//TypeMissions
		public RuleCall getTypeTypeMissionsEnumRuleCall_3_1_0() { return cTypeTypeMissionsEnumRuleCall_3_1_0; }
		
		//('InitialScore' InitialScore=EDouble)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'InitialScore'
		public Keyword getInitialScoreKeyword_4_0() { return cInitialScoreKeyword_4_0; }
		
		//InitialScore=EDouble
		public Assignment getInitialScoreAssignment_4_1() { return cInitialScoreAssignment_4_1; }
		
		//EDouble
		public RuleCall getInitialScoreEDoubleParserRuleCall_4_1_0() { return cInitialScoreEDoubleParserRuleCall_4_1_0; }
		
		//('FinalScore' FinalScore=EDouble)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'FinalScore'
		public Keyword getFinalScoreKeyword_5_0() { return cFinalScoreKeyword_5_0; }
		
		//FinalScore=EDouble
		public Assignment getFinalScoreAssignment_5_1() { return cFinalScoreAssignment_5_1; }
		
		//EDouble
		public RuleCall getFinalScoreEDoubleParserRuleCall_5_1_0() { return cFinalScoreEDoubleParserRuleCall_5_1_0; }
		
		//('nextunit' nextunit=[upctforma::Unit|EString])?
		public Group getGroup_6() { return cGroup_6; }
		
		//'nextunit'
		public Keyword getNextunitKeyword_6_0() { return cNextunitKeyword_6_0; }
		
		//nextunit=[upctforma::Unit|EString]
		public Assignment getNextunitAssignment_6_1() { return cNextunitAssignment_6_1; }
		
		//[upctforma::Unit|EString]
		public CrossReference getNextunitUnitCrossReference_6_1_0() { return cNextunitUnitCrossReference_6_1_0; }
		
		//EString
		public RuleCall getNextunitUnitEStringParserRuleCall_6_1_0_1() { return cNextunitUnitEStringParserRuleCall_6_1_0_1; }
		
		//('nexteval' nexteval=[upctformaevalua::EvaluationUnit|EString])?
		public Group getGroup_7() { return cGroup_7; }
		
		//'nexteval'
		public Keyword getNextevalKeyword_7_0() { return cNextevalKeyword_7_0; }
		
		//nexteval=[upctformaevalua::EvaluationUnit|EString]
		public Assignment getNextevalAssignment_7_1() { return cNextevalAssignment_7_1; }
		
		//[upctformaevalua::EvaluationUnit|EString]
		public CrossReference getNextevalEvaluationUnitCrossReference_7_1_0() { return cNextevalEvaluationUnitCrossReference_7_1_0; }
		
		//EString
		public RuleCall getNextevalEvaluationUnitEStringParserRuleCall_7_1_0_1() { return cNextevalEvaluationUnitEStringParserRuleCall_7_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class EvaluationUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.EvaluationUnit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEvaluationUnit_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTrainingParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFinalParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		///////////
		//EvaluationUnit upctformaevalua::EvaluationUnit:
		//	EvaluationUnit_Impl | Training | Final;
		@Override public ParserRule getRule() { return rule; }
		
		//EvaluationUnit_Impl | Training | Final
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EvaluationUnit_Impl
		public RuleCall getEvaluationUnit_ImplParserRuleCall_0() { return cEvaluationUnit_ImplParserRuleCall_0; }
		
		//Training
		public RuleCall getTrainingParserRuleCall_1() { return cTrainingParserRuleCall_1; }
		
		//Final
		public RuleCall getFinalParserRuleCall_2() { return cFinalParserRuleCall_2; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Parameter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cParameter_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFixedParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cVariableParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Parameter upctforma::Parameter:
		//	Parameter_Impl | Fixed | Variable;
		@Override public ParserRule getRule() { return rule; }
		
		//Parameter_Impl | Fixed | Variable
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Parameter_Impl
		public RuleCall getParameter_ImplParserRuleCall_0() { return cParameter_ImplParserRuleCall_0; }
		
		//Fixed
		public RuleCall getFixedParserRuleCall_1() { return cFixedParserRuleCall_1; }
		
		//Variable
		public RuleCall getVariableParserRuleCall_2() { return cVariableParserRuleCall_2; }
	}
	public class ContentElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.ContentElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cContentElement_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cColumnParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cImageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cWidgetParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTextParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cComposite_ImplParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cVideoParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cSimpleElement_ImplParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cParameter_ImplParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cRowParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cFixedParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cVariableParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		
		//ContentElement upctforma::ContentElement:
		//	ContentElement_Impl | Column | Image | Widget | Text | Composite_Impl | Video | SimpleElement_Impl | Parameter_Impl |
		//	Row | Fixed | Variable;
		@Override public ParserRule getRule() { return rule; }
		
		//ContentElement_Impl | Column | Image | Widget | Text | Composite_Impl | Video | SimpleElement_Impl | Parameter_Impl |
		//Row | Fixed | Variable
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ContentElement_Impl
		public RuleCall getContentElement_ImplParserRuleCall_0() { return cContentElement_ImplParserRuleCall_0; }
		
		//Column
		public RuleCall getColumnParserRuleCall_1() { return cColumnParserRuleCall_1; }
		
		//Image
		public RuleCall getImageParserRuleCall_2() { return cImageParserRuleCall_2; }
		
		//Widget
		public RuleCall getWidgetParserRuleCall_3() { return cWidgetParserRuleCall_3; }
		
		//Text
		public RuleCall getTextParserRuleCall_4() { return cTextParserRuleCall_4; }
		
		//Composite_Impl
		public RuleCall getComposite_ImplParserRuleCall_5() { return cComposite_ImplParserRuleCall_5; }
		
		//Video
		public RuleCall getVideoParserRuleCall_6() { return cVideoParserRuleCall_6; }
		
		//SimpleElement_Impl
		public RuleCall getSimpleElement_ImplParserRuleCall_7() { return cSimpleElement_ImplParserRuleCall_7; }
		
		//Parameter_Impl
		public RuleCall getParameter_ImplParserRuleCall_8() { return cParameter_ImplParserRuleCall_8; }
		
		//Row
		public RuleCall getRowParserRuleCall_9() { return cRowParserRuleCall_9; }
		
		//Fixed
		public RuleCall getFixedParserRuleCall_10() { return cFixedParserRuleCall_10; }
		
		//Variable
		public RuleCall getVariableParserRuleCall_11() { return cVariableParserRuleCall_11; }
	}
	public class ArgumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Argument");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cArgument_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cImageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cWidgetParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTextParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cVideoParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSimpleElement_ImplParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cTabParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cAnimationParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cDragAndDropParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cCompositeArgument_ImplParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//Argument upctforma::Argument:
		//	Argument_Impl | Image | Widget | Text | Video | SimpleElement_Impl | Tab | Animation | DragAndDrop |
		//	CompositeArgument_Impl;
		@Override public ParserRule getRule() { return rule; }
		
		//Argument_Impl | Image | Widget | Text | Video | SimpleElement_Impl | Tab | Animation | DragAndDrop |
		//CompositeArgument_Impl
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Argument_Impl
		public RuleCall getArgument_ImplParserRuleCall_0() { return cArgument_ImplParserRuleCall_0; }
		
		//Image
		public RuleCall getImageParserRuleCall_1() { return cImageParserRuleCall_1; }
		
		//Widget
		public RuleCall getWidgetParserRuleCall_2() { return cWidgetParserRuleCall_2; }
		
		//Text
		public RuleCall getTextParserRuleCall_3() { return cTextParserRuleCall_3; }
		
		//Video
		public RuleCall getVideoParserRuleCall_4() { return cVideoParserRuleCall_4; }
		
		//SimpleElement_Impl
		public RuleCall getSimpleElement_ImplParserRuleCall_5() { return cSimpleElement_ImplParserRuleCall_5; }
		
		//Tab
		public RuleCall getTabParserRuleCall_6() { return cTabParserRuleCall_6; }
		
		//Animation
		public RuleCall getAnimationParserRuleCall_7() { return cAnimationParserRuleCall_7; }
		
		//DragAndDrop
		public RuleCall getDragAndDropParserRuleCall_8() { return cDragAndDropParserRuleCall_8; }
		
		//CompositeArgument_Impl
		public RuleCall getCompositeArgument_ImplParserRuleCall_9() { return cCompositeArgument_ImplParserRuleCall_9; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cType_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSimpleTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAggregatedTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cWidgetTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cListTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Type upctforma::Type:
		//	Type_Impl | SimpleType | AggregatedType | WidgetType | ListType;
		@Override public ParserRule getRule() { return rule; }
		
		//Type_Impl | SimpleType | AggregatedType | WidgetType | ListType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Type_Impl
		public RuleCall getType_ImplParserRuleCall_0() { return cType_ImplParserRuleCall_0; }
		
		//SimpleType
		public RuleCall getSimpleTypeParserRuleCall_1() { return cSimpleTypeParserRuleCall_1; }
		
		//AggregatedType
		public RuleCall getAggregatedTypeParserRuleCall_2() { return cAggregatedTypeParserRuleCall_2; }
		
		//WidgetType
		public RuleCall getWidgetTypeParserRuleCall_3() { return cWidgetTypeParserRuleCall_3; }
		
		//ListType
		public RuleCall getListTypeParserRuleCall_4() { return cListTypeParserRuleCall_4; }
	}
	public class SimpleElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.SimpleElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleElement_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cImageParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTextParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cVideoParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//SimpleElement upctforma::SimpleElement:
		//	SimpleElement_Impl | Image | Text | Video;
		@Override public ParserRule getRule() { return rule; }
		
		//SimpleElement_Impl | Image | Text | Video
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SimpleElement_Impl
		public RuleCall getSimpleElement_ImplParserRuleCall_0() { return cSimpleElement_ImplParserRuleCall_0; }
		
		//Image
		public RuleCall getImageParserRuleCall_1() { return cImageParserRuleCall_1; }
		
		//Text
		public RuleCall getTextParserRuleCall_2() { return cTextParserRuleCall_2; }
		
		//Video
		public RuleCall getVideoParserRuleCall_3() { return cVideoParserRuleCall_3; }
	}
	public class QuestionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Question");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cQuestion_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUniqueAnswerParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMultipleAnswerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cFillingAnswerParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTrueOrFalseParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Question upctformaevalua::Question:
		//	Question_Impl | UniqueAnswer | MultipleAnswer | FillingAnswer | TrueOrFalse;
		@Override public ParserRule getRule() { return rule; }
		
		//Question_Impl | UniqueAnswer | MultipleAnswer | FillingAnswer | TrueOrFalse
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Question_Impl
		public RuleCall getQuestion_ImplParserRuleCall_0() { return cQuestion_ImplParserRuleCall_0; }
		
		//UniqueAnswer
		public RuleCall getUniqueAnswerParserRuleCall_1() { return cUniqueAnswerParserRuleCall_1; }
		
		//MultipleAnswer
		public RuleCall getMultipleAnswerParserRuleCall_2() { return cMultipleAnswerParserRuleCall_2; }
		
		//FillingAnswer
		public RuleCall getFillingAnswerParserRuleCall_3() { return cFillingAnswerParserRuleCall_3; }
		
		//TrueOrFalse
		public RuleCall getTrueOrFalseParserRuleCall_4() { return cTrueOrFalseParserRuleCall_4; }
	}
	public class UnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Unit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUnitKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAuthorKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAuthorAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAuthorEStringParserRuleCall_3_1_0 = (RuleCall)cAuthorAssignment_3_1.eContents().get(0);
		private final Keyword cSectionsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSectionsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSectionsSectionParserRuleCall_6_0 = (RuleCall)cSectionsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSectionsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cSectionsSectionParserRuleCall_7_1_0 = (RuleCall)cSectionsAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Unit upctforma::Unit:
		//	'Unit'
		//	name=EString
		//	'{' ('author' author=EString)?
		//	'sections' '{' sections+=Section ("," sections+=Section)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Unit' name=EString '{' ('author' author=EString)? 'sections' '{' sections+=Section ("," sections+=Section)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'Unit'
		public Keyword getUnitKeyword_0() { return cUnitKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('author' author=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'author'
		public Keyword getAuthorKeyword_3_0() { return cAuthorKeyword_3_0; }
		
		//author=EString
		public Assignment getAuthorAssignment_3_1() { return cAuthorAssignment_3_1; }
		
		//EString
		public RuleCall getAuthorEStringParserRuleCall_3_1_0() { return cAuthorEStringParserRuleCall_3_1_0; }
		
		//'sections'
		public Keyword getSectionsKeyword_4() { return cSectionsKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//sections+=Section
		public Assignment getSectionsAssignment_6() { return cSectionsAssignment_6; }
		
		//Section
		public RuleCall getSectionsSectionParserRuleCall_6_0() { return cSectionsSectionParserRuleCall_6_0; }
		
		//("," sections+=Section)*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//sections+=Section
		public Assignment getSectionsAssignment_7_1() { return cSectionsAssignment_7_1; }
		
		//Section
		public RuleCall getSectionsSectionParserRuleCall_7_1_0() { return cSectionsSectionParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class WidgetTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.WidgetType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWidgetTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cWidgetTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cParametersKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cParametersAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_4_2_0 = (RuleCall)cParametersAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cParametersAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_4_3_1_0 = (RuleCall)cParametersAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//WidgetType upctforma::WidgetType:
		//	{upctforma::WidgetType}
		//	'WidgetType'
		//	name=EString
		//	'{' ('parameters' '{' parameters+=Parameter ("," parameters+=Parameter)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::WidgetType} 'WidgetType' name=EString '{' ('parameters' '{' parameters+=Parameter (","
		//parameters+=Parameter)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::WidgetType}
		public Action getWidgetTypeAction_0() { return cWidgetTypeAction_0; }
		
		//'WidgetType'
		public Keyword getWidgetTypeKeyword_1() { return cWidgetTypeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('parameters' '{' parameters+=Parameter ("," parameters+=Parameter)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'parameters'
		public Keyword getParametersKeyword_4_0() { return cParametersKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_4_2() { return cParametersAssignment_4_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_4_2_0() { return cParametersParameterParserRuleCall_4_2_0; }
		
		//("," parameters+=Parameter)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_4_3_1() { return cParametersAssignment_4_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_4_3_1_0() { return cParametersParameterParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class SectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Section");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSectionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSectionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cImageKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cImageAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cImageEStringParserRuleCall_4_1_0 = (RuleCall)cImageAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTitleKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTitleAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTitleEStringParserRuleCall_5_1_0 = (RuleCall)cTitleAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cRowsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cRowsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cRowsRowParserRuleCall_6_2_0 = (RuleCall)cRowsAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cRowsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cRowsRowParserRuleCall_6_3_1_0 = (RuleCall)cRowsAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Section upctforma::Section:
		//	{upctforma::Section}
		//	'Section'
		//	name=EString
		//	'{' ('image' image=EString)? ('title' title=EString)? ('rows' '{' rows+=Row ("," rows+=Row)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::Section} 'Section' name=EString '{' ('image' image=EString)? ('title' title=EString)? ('rows' '{' rows+=Row
		//("," rows+=Row)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::Section}
		public Action getSectionAction_0() { return cSectionAction_0; }
		
		//'Section'
		public Keyword getSectionKeyword_1() { return cSectionKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('image' image=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'image'
		public Keyword getImageKeyword_4_0() { return cImageKeyword_4_0; }
		
		//image=EString
		public Assignment getImageAssignment_4_1() { return cImageAssignment_4_1; }
		
		//EString
		public RuleCall getImageEStringParserRuleCall_4_1_0() { return cImageEStringParserRuleCall_4_1_0; }
		
		//('title' title=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'title'
		public Keyword getTitleKeyword_5_0() { return cTitleKeyword_5_0; }
		
		//title=EString
		public Assignment getTitleAssignment_5_1() { return cTitleAssignment_5_1; }
		
		//EString
		public RuleCall getTitleEStringParserRuleCall_5_1_0() { return cTitleEStringParserRuleCall_5_1_0; }
		
		//('rows' '{' rows+=Row ("," rows+=Row)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'rows'
		public Keyword getRowsKeyword_6_0() { return cRowsKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//rows+=Row
		public Assignment getRowsAssignment_6_2() { return cRowsAssignment_6_2; }
		
		//Row
		public RuleCall getRowsRowParserRuleCall_6_2_0() { return cRowsRowParserRuleCall_6_2_0; }
		
		//("," rows+=Row)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//rows+=Row
		public Assignment getRowsAssignment_6_3_1() { return cRowsAssignment_6_3_1; }
		
		//Row
		public RuleCall getRowsRowParserRuleCall_6_3_1_0() { return cRowsRowParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class RowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Row");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRowAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRowKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColumnsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cColumnsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cColumnsColumnParserRuleCall_3_2_0 = (RuleCall)cColumnsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cColumnsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cColumnsColumnParserRuleCall_3_3_1_0 = (RuleCall)cColumnsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cUsetemplateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cUsetemplateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cUsetemplateUseTemplateParserRuleCall_4_1_0 = (RuleCall)cUsetemplateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Row upctforma::Row:
		//	{upctforma::Row}
		//	'Row'
		//	'{' ('columns' '{' columns+=Column ("," columns+=Column)* '}')? ('usetemplate' usetemplate=UseTemplate)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::Row} 'Row' '{' ('columns' '{' columns+=Column ("," columns+=Column)* '}')? ('usetemplate'
		//usetemplate=UseTemplate)? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::Row}
		public Action getRowAction_0() { return cRowAction_0; }
		
		//'Row'
		public Keyword getRowKeyword_1() { return cRowKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('columns' '{' columns+=Column ("," columns+=Column)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'columns'
		public Keyword getColumnsKeyword_3_0() { return cColumnsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//columns+=Column
		public Assignment getColumnsAssignment_3_2() { return cColumnsAssignment_3_2; }
		
		//Column
		public RuleCall getColumnsColumnParserRuleCall_3_2_0() { return cColumnsColumnParserRuleCall_3_2_0; }
		
		//("," columns+=Column)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//columns+=Column
		public Assignment getColumnsAssignment_3_3_1() { return cColumnsAssignment_3_3_1; }
		
		//Column
		public RuleCall getColumnsColumnParserRuleCall_3_3_1_0() { return cColumnsColumnParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('usetemplate' usetemplate=UseTemplate)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'usetemplate'
		public Keyword getUsetemplateKeyword_4_0() { return cUsetemplateKeyword_4_0; }
		
		//usetemplate=UseTemplate
		public Assignment getUsetemplateAssignment_4_1() { return cUsetemplateAssignment_4_1; }
		
		//UseTemplate
		public RuleCall getUsetemplateUseTemplateParserRuleCall_4_1_0() { return cUsetemplateUseTemplateParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ColumnElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Column");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cColumnAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cColumnKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cWidthKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cWidthAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cWidthEStringParserRuleCall_3_1_0 = (RuleCall)cWidthAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cElementsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cElementsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cElementsContentElementParserRuleCall_4_2_0 = (RuleCall)cElementsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cElementsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cElementsContentElementParserRuleCall_4_3_1_0 = (RuleCall)cElementsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Column upctforma::Column:
		//	{upctforma::Column}
		//	'Column'
		//	'{' ('width' width=EString)? ('elements' '{' elements+=ContentElement ("," elements+=ContentElement)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::Column} 'Column' '{' ('width' width=EString)? ('elements' '{' elements+=ContentElement (","
		//elements+=ContentElement)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::Column}
		public Action getColumnAction_0() { return cColumnAction_0; }
		
		//'Column'
		public Keyword getColumnKeyword_1() { return cColumnKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('width' width=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'width'
		public Keyword getWidthKeyword_3_0() { return cWidthKeyword_3_0; }
		
		//width=EString
		public Assignment getWidthAssignment_3_1() { return cWidthAssignment_3_1; }
		
		//EString
		public RuleCall getWidthEStringParserRuleCall_3_1_0() { return cWidthEStringParserRuleCall_3_1_0; }
		
		//('elements' '{' elements+=ContentElement ("," elements+=ContentElement)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'elements'
		public Keyword getElementsKeyword_4_0() { return cElementsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//elements+=ContentElement
		public Assignment getElementsAssignment_4_2() { return cElementsAssignment_4_2; }
		
		//ContentElement
		public RuleCall getElementsContentElementParserRuleCall_4_2_0() { return cElementsContentElementParserRuleCall_4_2_0; }
		
		//("," elements+=ContentElement)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//elements+=ContentElement
		public Assignment getElementsAssignment_4_3_1() { return cElementsAssignment_4_3_1; }
		
		//ContentElement
		public RuleCall getElementsContentElementParserRuleCall_4_3_1_0() { return cElementsContentElementParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class UseTemplateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.UseTemplate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUseTemplateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUseTemplateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTypetemplateKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypetemplateAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cTypetemplateTemplateDefCrossReference_3_1_0 = (CrossReference)cTypetemplateAssignment_3_1.eContents().get(0);
		private final RuleCall cTypetemplateTemplateDefEStringParserRuleCall_3_1_0_1 = (RuleCall)cTypetemplateTemplateDefCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cArgumentsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cArgumentsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cArgumentsArgumentParserRuleCall_4_2_0 = (RuleCall)cArgumentsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cArgumentsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cArgumentsArgumentParserRuleCall_4_3_1_0 = (RuleCall)cArgumentsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//UseTemplate upctforma::UseTemplate:
		//	{upctforma::UseTemplate}
		//	'UseTemplate'
		//	'{' ('typetemplate' typetemplate=[upctforma::TemplateDef|EString])? ('arguments' '{' arguments+=Argument (","
		//	arguments+=Argument)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::UseTemplate} 'UseTemplate' '{' ('typetemplate' typetemplate=[upctforma::TemplateDef|EString])? ('arguments'
		//'{' arguments+=Argument ("," arguments+=Argument)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::UseTemplate}
		public Action getUseTemplateAction_0() { return cUseTemplateAction_0; }
		
		//'UseTemplate'
		public Keyword getUseTemplateKeyword_1() { return cUseTemplateKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('typetemplate' typetemplate=[upctforma::TemplateDef|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'typetemplate'
		public Keyword getTypetemplateKeyword_3_0() { return cTypetemplateKeyword_3_0; }
		
		//typetemplate=[upctforma::TemplateDef|EString]
		public Assignment getTypetemplateAssignment_3_1() { return cTypetemplateAssignment_3_1; }
		
		//[upctforma::TemplateDef|EString]
		public CrossReference getTypetemplateTemplateDefCrossReference_3_1_0() { return cTypetemplateTemplateDefCrossReference_3_1_0; }
		
		//EString
		public RuleCall getTypetemplateTemplateDefEStringParserRuleCall_3_1_0_1() { return cTypetemplateTemplateDefEStringParserRuleCall_3_1_0_1; }
		
		//('arguments' '{' arguments+=Argument ("," arguments+=Argument)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'arguments'
		public Keyword getArgumentsKeyword_4_0() { return cArgumentsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//arguments+=Argument
		public Assignment getArgumentsAssignment_4_2() { return cArgumentsAssignment_4_2; }
		
		//Argument
		public RuleCall getArgumentsArgumentParserRuleCall_4_2_0() { return cArgumentsArgumentParserRuleCall_4_2_0; }
		
		//("," arguments+=Argument)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//arguments+=Argument
		public Assignment getArgumentsAssignment_4_3_1() { return cArgumentsAssignment_4_3_1; }
		
		//Argument
		public RuleCall getArgumentsArgumentParserRuleCall_4_3_1_0() { return cArgumentsArgumentParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ContentElement_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.ContentElement_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContentElementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cContentElementKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ContentElement_Impl upctforma::ContentElement:
		//	{upctforma::ContentElement}
		//	'ContentElement';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::ContentElement} 'ContentElement'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::ContentElement}
		public Action getContentElementAction_0() { return cContentElementAction_0; }
		
		//'ContentElement'
		public Keyword getContentElementKeyword_1() { return cContentElementKeyword_1; }
	}
	public class ImageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Image");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cImageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cImageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUrlKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUrlAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUrlEStringParserRuleCall_3_1_0 = (RuleCall)cUrlAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Image upctforma::Image:
		//	{upctforma::Image}
		//	'Image'
		//	'{' ('url' url=EString)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::Image} 'Image' '{' ('url' url=EString)? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::Image}
		public Action getImageAction_0() { return cImageAction_0; }
		
		//'Image'
		public Keyword getImageKeyword_1() { return cImageKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('url' url=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'url'
		public Keyword getUrlKeyword_3_0() { return cUrlKeyword_3_0; }
		
		//url=EString
		public Assignment getUrlAssignment_3_1() { return cUrlAssignment_3_1; }
		
		//EString
		public RuleCall getUrlEStringParserRuleCall_3_1_0() { return cUrlEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class WidgetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Widget");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWidgetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cWidgettypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cWidgettypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cWidgettypeWidgetTypeCrossReference_4_0 = (CrossReference)cWidgettypeAssignment_4.eContents().get(0);
		private final RuleCall cWidgettypeWidgetTypeEStringParserRuleCall_4_0_1 = (RuleCall)cWidgettypeWidgetTypeCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cWidgetargumentsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cWidgetargumentsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cWidgetargumentsArgumentParserRuleCall_5_2_0 = (RuleCall)cWidgetargumentsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cWidgetargumentsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cWidgetargumentsArgumentParserRuleCall_5_3_1_0 = (RuleCall)cWidgetargumentsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Widget upctforma::Widget:
		//	'Widget'
		//	name=EString
		//	'{'
		//	'widgettype' widgettype=[upctforma::WidgetType|EString] ('widgetarguments' '{' widgetarguments+=Argument (","
		//	widgetarguments+=Argument)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Widget' name=EString '{' 'widgettype' widgettype=[upctforma::WidgetType|EString] ('widgetarguments' '{'
		//widgetarguments+=Argument ("," widgetarguments+=Argument)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//'Widget'
		public Keyword getWidgetKeyword_0() { return cWidgetKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'widgettype'
		public Keyword getWidgettypeKeyword_3() { return cWidgettypeKeyword_3; }
		
		//widgettype=[upctforma::WidgetType|EString]
		public Assignment getWidgettypeAssignment_4() { return cWidgettypeAssignment_4; }
		
		//[upctforma::WidgetType|EString]
		public CrossReference getWidgettypeWidgetTypeCrossReference_4_0() { return cWidgettypeWidgetTypeCrossReference_4_0; }
		
		//EString
		public RuleCall getWidgettypeWidgetTypeEStringParserRuleCall_4_0_1() { return cWidgettypeWidgetTypeEStringParserRuleCall_4_0_1; }
		
		//('widgetarguments' '{' widgetarguments+=Argument ("," widgetarguments+=Argument)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'widgetarguments'
		public Keyword getWidgetargumentsKeyword_5_0() { return cWidgetargumentsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//widgetarguments+=Argument
		public Assignment getWidgetargumentsAssignment_5_2() { return cWidgetargumentsAssignment_5_2; }
		
		//Argument
		public RuleCall getWidgetargumentsArgumentParserRuleCall_5_2_0() { return cWidgetargumentsArgumentParserRuleCall_5_2_0; }
		
		//("," widgetarguments+=Argument)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//widgetarguments+=Argument
		public Assignment getWidgetargumentsAssignment_5_3_1() { return cWidgetargumentsAssignment_5_3_1; }
		
		//Argument
		public RuleCall getWidgetargumentsArgumentParserRuleCall_5_3_1_0() { return cWidgetargumentsArgumentParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class TextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Text");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cParagraphsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cParagraphsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cParagraphsParagraphParserRuleCall_4_0 = (RuleCall)cParagraphsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cParagraphsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cParagraphsParagraphParserRuleCall_5_1_0 = (RuleCall)cParagraphsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Text upctforma::Text:
		//	'Text'
		//	'{'
		//	'paragraphs' '{' paragraphs+=Paragraph ("," paragraphs+=Paragraph)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Text' '{' 'paragraphs' '{' paragraphs+=Paragraph ("," paragraphs+=Paragraph)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'Text'
		public Keyword getTextKeyword_0() { return cTextKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'paragraphs'
		public Keyword getParagraphsKeyword_2() { return cParagraphsKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//paragraphs+=Paragraph
		public Assignment getParagraphsAssignment_4() { return cParagraphsAssignment_4; }
		
		//Paragraph
		public RuleCall getParagraphsParagraphParserRuleCall_4_0() { return cParagraphsParagraphParserRuleCall_4_0; }
		
		//("," paragraphs+=Paragraph)*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//paragraphs+=Paragraph
		public Assignment getParagraphsAssignment_5_1() { return cParagraphsAssignment_5_1; }
		
		//Paragraph
		public RuleCall getParagraphsParagraphParserRuleCall_5_1_0() { return cParagraphsParagraphParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class Composite_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Composite_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCompositeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCompositeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Composite_Impl upctforma::Composite:
		//	{upctforma::Composite}
		//	'Composite';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::Composite} 'Composite'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::Composite}
		public Action getCompositeAction_0() { return cCompositeAction_0; }
		
		//'Composite'
		public Keyword getCompositeKeyword_1() { return cCompositeKeyword_1; }
	}
	public class VideoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Video");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVideoAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVideoKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUrlKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUrlAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUrlEStringParserRuleCall_3_1_0 = (RuleCall)cUrlAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Video upctforma::Video:
		//	{upctforma::Video}
		//	'Video'
		//	'{' ('url' url=EString)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::Video} 'Video' '{' ('url' url=EString)? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::Video}
		public Action getVideoAction_0() { return cVideoAction_0; }
		
		//'Video'
		public Keyword getVideoKeyword_1() { return cVideoKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('url' url=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'url'
		public Keyword getUrlKeyword_3_0() { return cUrlKeyword_3_0; }
		
		//url=EString
		public Assignment getUrlAssignment_3_1() { return cUrlAssignment_3_1; }
		
		//EString
		public RuleCall getUrlEStringParserRuleCall_3_1_0() { return cUrlEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class SimpleElement_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.SimpleElement_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSimpleElementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSimpleElementKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//SimpleElement_Impl upctforma::SimpleElement:
		//	{upctforma::SimpleElement}
		//	'SimpleElement';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::SimpleElement} 'SimpleElement'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::SimpleElement}
		public Action getSimpleElementAction_0() { return cSimpleElementAction_0; }
		
		//'SimpleElement'
		public Keyword getSimpleElementKeyword_1() { return cSimpleElementKeyword_1; }
	}
	public class Parameter_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Parameter_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParameterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeTypeCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeTypeEStringParserRuleCall_3_0_1 = (RuleCall)cTypeTypeCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Parameter_Impl upctforma::Parameter:
		//	'Parameter'
		//	'{'
		//	'type' type=[upctforma::Type|EString]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Parameter' '{' 'type' type=[upctforma::Type|EString] '}'
		public Group getGroup() { return cGroup; }
		
		//'Parameter'
		public Keyword getParameterKeyword_0() { return cParameterKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'type'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//type=[upctforma::Type|EString]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//[upctforma::Type|EString]
		public CrossReference getTypeTypeCrossReference_3_0() { return cTypeTypeCrossReference_3_0; }
		
		//EString
		public RuleCall getTypeTypeEStringParserRuleCall_3_0_1() { return cTypeTypeEStringParserRuleCall_3_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FixedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Fixed");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFixedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeTypeCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeTypeEStringParserRuleCall_3_0_1 = (RuleCall)cTypeTypeCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Fixed upctforma::Fixed:
		//	'Fixed'
		//	'{'
		//	'type' type=[upctforma::Type|EString]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Fixed' '{' 'type' type=[upctforma::Type|EString] '}'
		public Group getGroup() { return cGroup; }
		
		//'Fixed'
		public Keyword getFixedKeyword_0() { return cFixedKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'type'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//type=[upctforma::Type|EString]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//[upctforma::Type|EString]
		public CrossReference getTypeTypeCrossReference_3_0() { return cTypeTypeCrossReference_3_0; }
		
		//EString
		public RuleCall getTypeTypeEStringParserRuleCall_3_0_1() { return cTypeTypeEStringParserRuleCall_3_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVariableKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeTypeCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeTypeEStringParserRuleCall_3_0_1 = (RuleCall)cTypeTypeCrossReference_3_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Variable upctforma::Variable:
		//	'Variable'
		//	'{'
		//	'type' type=[upctforma::Type|EString]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Variable' '{' 'type' type=[upctforma::Type|EString] '}'
		public Group getGroup() { return cGroup; }
		
		//'Variable'
		public Keyword getVariableKeyword_0() { return cVariableKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'type'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//type=[upctforma::Type|EString]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//[upctforma::Type|EString]
		public CrossReference getTypeTypeCrossReference_3_0() { return cTypeTypeCrossReference_3_0; }
		
		//EString
		public RuleCall getTypeTypeEStringParserRuleCall_3_0_1() { return cTypeTypeEStringParserRuleCall_3_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class Argument_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Argument_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cArgumentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cArgumentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Argument_Impl upctforma::Argument:
		//	{upctforma::Argument}
		//	'Argument';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::Argument} 'Argument'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::Argument}
		public Action getArgumentAction_0() { return cArgumentAction_0; }
		
		//'Argument'
		public Keyword getArgumentKeyword_1() { return cArgumentKeyword_1; }
	}
	public class TabElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Tab");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTabAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTabKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgumentsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cArgumentsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cArgumentsSimpleElementParserRuleCall_3_2_0 = (RuleCall)cArgumentsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cArgumentsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cArgumentsSimpleElementParserRuleCall_3_3_1_0 = (RuleCall)cArgumentsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Tab upctforma::Tab:
		//	{upctforma::Tab}
		//	'Tab'
		//	'{' ('arguments' '{' arguments+=SimpleElement ("," arguments+=SimpleElement)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::Tab} 'Tab' '{' ('arguments' '{' arguments+=SimpleElement ("," arguments+=SimpleElement)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::Tab}
		public Action getTabAction_0() { return cTabAction_0; }
		
		//'Tab'
		public Keyword getTabKeyword_1() { return cTabKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('arguments' '{' arguments+=SimpleElement ("," arguments+=SimpleElement)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'arguments'
		public Keyword getArgumentsKeyword_3_0() { return cArgumentsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//arguments+=SimpleElement
		public Assignment getArgumentsAssignment_3_2() { return cArgumentsAssignment_3_2; }
		
		//SimpleElement
		public RuleCall getArgumentsSimpleElementParserRuleCall_3_2_0() { return cArgumentsSimpleElementParserRuleCall_3_2_0; }
		
		//("," arguments+=SimpleElement)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//arguments+=SimpleElement
		public Assignment getArgumentsAssignment_3_3_1() { return cArgumentsAssignment_3_3_1; }
		
		//SimpleElement
		public RuleCall getArgumentsSimpleElementParserRuleCall_3_3_1_0() { return cArgumentsSimpleElementParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class AnimationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Animation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAnimationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAnimationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cWidthKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cWidthAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cWidthEStringParserRuleCall_3_1_0 = (RuleCall)cWidthAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cImageKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cImageAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cImageEStringParserRuleCall_4_1_0 = (RuleCall)cImageAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cArgumentsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cArgumentsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cArgumentsSimpleElementParserRuleCall_5_2_0 = (RuleCall)cArgumentsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cArgumentsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cArgumentsSimpleElementParserRuleCall_5_3_1_0 = (RuleCall)cArgumentsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Animation upctforma::Animation:
		//	{upctforma::Animation}
		//	'Animation'
		//	'{' ('width' width=EString)? ('image' image=EString)? ('arguments' '{' arguments+=SimpleElement (","
		//	arguments+=SimpleElement)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::Animation} 'Animation' '{' ('width' width=EString)? ('image' image=EString)? ('arguments' '{'
		//arguments+=SimpleElement ("," arguments+=SimpleElement)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::Animation}
		public Action getAnimationAction_0() { return cAnimationAction_0; }
		
		//'Animation'
		public Keyword getAnimationKeyword_1() { return cAnimationKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('width' width=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'width'
		public Keyword getWidthKeyword_3_0() { return cWidthKeyword_3_0; }
		
		//width=EString
		public Assignment getWidthAssignment_3_1() { return cWidthAssignment_3_1; }
		
		//EString
		public RuleCall getWidthEStringParserRuleCall_3_1_0() { return cWidthEStringParserRuleCall_3_1_0; }
		
		//('image' image=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'image'
		public Keyword getImageKeyword_4_0() { return cImageKeyword_4_0; }
		
		//image=EString
		public Assignment getImageAssignment_4_1() { return cImageAssignment_4_1; }
		
		//EString
		public RuleCall getImageEStringParserRuleCall_4_1_0() { return cImageEStringParserRuleCall_4_1_0; }
		
		//('arguments' '{' arguments+=SimpleElement ("," arguments+=SimpleElement)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'arguments'
		public Keyword getArgumentsKeyword_5_0() { return cArgumentsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//arguments+=SimpleElement
		public Assignment getArgumentsAssignment_5_2() { return cArgumentsAssignment_5_2; }
		
		//SimpleElement
		public RuleCall getArgumentsSimpleElementParserRuleCall_5_2_0() { return cArgumentsSimpleElementParserRuleCall_5_2_0; }
		
		//("," arguments+=SimpleElement)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//arguments+=SimpleElement
		public Assignment getArgumentsAssignment_5_3_1() { return cArgumentsAssignment_5_3_1; }
		
		//SimpleElement
		public RuleCall getArgumentsSimpleElementParserRuleCall_5_3_1_0() { return cArgumentsSimpleElementParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DragAndDropElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.DragAndDrop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDragAndDropAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDragAndDropKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgumentsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cArgumentsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cArgumentsSimpleElementParserRuleCall_3_2_0 = (RuleCall)cArgumentsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cArgumentsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cArgumentsSimpleElementParserRuleCall_3_3_1_0 = (RuleCall)cArgumentsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//DragAndDrop upctforma::DragAndDrop:
		//	{upctforma::DragAndDrop}
		//	'DragAndDrop'
		//	'{' ('arguments' '{' arguments+=SimpleElement ("," arguments+=SimpleElement)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::DragAndDrop} 'DragAndDrop' '{' ('arguments' '{' arguments+=SimpleElement ("," arguments+=SimpleElement)*
		//'}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::DragAndDrop}
		public Action getDragAndDropAction_0() { return cDragAndDropAction_0; }
		
		//'DragAndDrop'
		public Keyword getDragAndDropKeyword_1() { return cDragAndDropKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('arguments' '{' arguments+=SimpleElement ("," arguments+=SimpleElement)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'arguments'
		public Keyword getArgumentsKeyword_3_0() { return cArgumentsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//arguments+=SimpleElement
		public Assignment getArgumentsAssignment_3_2() { return cArgumentsAssignment_3_2; }
		
		//SimpleElement
		public RuleCall getArgumentsSimpleElementParserRuleCall_3_2_0() { return cArgumentsSimpleElementParserRuleCall_3_2_0; }
		
		//("," arguments+=SimpleElement)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//arguments+=SimpleElement
		public Assignment getArgumentsAssignment_3_3_1() { return cArgumentsAssignment_3_3_1; }
		
		//SimpleElement
		public RuleCall getArgumentsSimpleElementParserRuleCall_3_3_1_0() { return cArgumentsSimpleElementParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class CompositeArgument_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.CompositeArgument_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCompositeArgumentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCompositeArgumentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgumentsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cArgumentsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cArgumentsSimpleElementParserRuleCall_3_2_0 = (RuleCall)cArgumentsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cArgumentsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cArgumentsSimpleElementParserRuleCall_3_3_1_0 = (RuleCall)cArgumentsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//CompositeArgument_Impl upctforma::CompositeArgument:
		//	{upctforma::CompositeArgument}
		//	'CompositeArgument'
		//	'{' ('arguments' '{' arguments+=SimpleElement ("," arguments+=SimpleElement)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::CompositeArgument} 'CompositeArgument' '{' ('arguments' '{' arguments+=SimpleElement (","
		//arguments+=SimpleElement)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::CompositeArgument}
		public Action getCompositeArgumentAction_0() { return cCompositeArgumentAction_0; }
		
		//'CompositeArgument'
		public Keyword getCompositeArgumentKeyword_1() { return cCompositeArgumentKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('arguments' '{' arguments+=SimpleElement ("," arguments+=SimpleElement)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'arguments'
		public Keyword getArgumentsKeyword_3_0() { return cArgumentsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//arguments+=SimpleElement
		public Assignment getArgumentsAssignment_3_2() { return cArgumentsAssignment_3_2; }
		
		//SimpleElement
		public RuleCall getArgumentsSimpleElementParserRuleCall_3_2_0() { return cArgumentsSimpleElementParserRuleCall_3_2_0; }
		
		//("," arguments+=SimpleElement)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//arguments+=SimpleElement
		public Assignment getArgumentsAssignment_3_3_1() { return cArgumentsAssignment_3_3_1; }
		
		//SimpleElement
		public RuleCall getArgumentsSimpleElementParserRuleCall_3_3_1_0() { return cArgumentsSimpleElementParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ParagraphElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Paragraph");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParagraphAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cParagraphKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTextKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTextAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTextEStringParserRuleCall_3_1_0 = (RuleCall)cTextAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Paragraph upctforma::Paragraph:
		//	{upctforma::Paragraph}
		//	'Paragraph'
		//	'{' ('text' text=EString)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::Paragraph} 'Paragraph' '{' ('text' text=EString)? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::Paragraph}
		public Action getParagraphAction_0() { return cParagraphAction_0; }
		
		//'Paragraph'
		public Keyword getParagraphKeyword_1() { return cParagraphKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('text' text=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'text'
		public Keyword getTextKeyword_3_0() { return cTextKeyword_3_0; }
		
		//text=EString
		public Assignment getTextAssignment_3_1() { return cTextAssignment_3_1; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_3_1_0() { return cTextEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class Type_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Type_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Type_Impl upctforma::Type:
		//	{upctforma::Type}
		//	'Type'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::Type} 'Type' name=EString
		public Group getGroup() { return cGroup; }
		
		//{upctforma::Type}
		public Action getTypeAction_0() { return cTypeAction_0; }
		
		//'Type'
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class SimpleTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.SimpleType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSimpleTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSimpleTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeTypeSimpleElementEnumRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SimpleType upctforma::SimpleType:
		//	{upctforma::SimpleType}
		//	'SimpleType'
		//	name=EString
		//	'{' ('type' type=TypeSimpleElement)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::SimpleType} 'SimpleType' name=EString '{' ('type' type=TypeSimpleElement)? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::SimpleType}
		public Action getSimpleTypeAction_0() { return cSimpleTypeAction_0; }
		
		//'SimpleType'
		public Keyword getSimpleTypeKeyword_1() { return cSimpleTypeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('type' type=TypeSimpleElement)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'type'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//type=TypeSimpleElement
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//TypeSimpleElement
		public RuleCall getTypeTypeSimpleElementEnumRuleCall_4_1_0() { return cTypeTypeSimpleElementEnumRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AggregatedTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.AggregatedType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAggregatedTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAggregatedTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cTypeAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cTypeSimpleTypeParserRuleCall_4_2_0 = (RuleCall)cTypeAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cTypeAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cTypeSimpleTypeParserRuleCall_4_3_1_0 = (RuleCall)cTypeAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AggregatedType upctforma::AggregatedType:
		//	{upctforma::AggregatedType}
		//	'AggregatedType'
		//	name=EString
		//	'{' ('type' '{' type+=SimpleType ("," type+=SimpleType)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::AggregatedType} 'AggregatedType' name=EString '{' ('type' '{' type+=SimpleType ("," type+=SimpleType)* '}')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::AggregatedType}
		public Action getAggregatedTypeAction_0() { return cAggregatedTypeAction_0; }
		
		//'AggregatedType'
		public Keyword getAggregatedTypeKeyword_1() { return cAggregatedTypeKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('type' '{' type+=SimpleType ("," type+=SimpleType)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'type'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//type+=SimpleType
		public Assignment getTypeAssignment_4_2() { return cTypeAssignment_4_2; }
		
		//SimpleType
		public RuleCall getTypeSimpleTypeParserRuleCall_4_2_0() { return cTypeSimpleTypeParserRuleCall_4_2_0; }
		
		//("," type+=SimpleType)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//type+=SimpleType
		public Assignment getTypeAssignment_4_3_1() { return cTypeAssignment_4_3_1; }
		
		//SimpleType
		public RuleCall getTypeSimpleTypeParserRuleCall_4_3_1_0() { return cTypeSimpleTypeParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ListTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.ListType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cListKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cListtypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cListtypeSimpleTypeCrossReference_3_0 = (CrossReference)cListtypeAssignment_3.eContents().get(0);
		private final RuleCall cListtypeSimpleTypeEStringParserRuleCall_3_0_1 = (RuleCall)cListtypeSimpleTypeCrossReference_3_0.eContents().get(1);
		
		//ListType upctforma::ListType:
		//	{upctforma::ListType}
		//	'List'
		//	name=EString
		//	listtype=[upctforma::SimpleType|EString]?;
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::ListType} 'List' name=EString listtype=[upctforma::SimpleType|EString]?
		public Group getGroup() { return cGroup; }
		
		//{upctforma::ListType}
		public Action getListTypeAction_0() { return cListTypeAction_0; }
		
		//'List'
		public Keyword getListKeyword_1() { return cListKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//listtype=[upctforma::SimpleType|EString]?
		public Assignment getListtypeAssignment_3() { return cListtypeAssignment_3; }
		
		//[upctforma::SimpleType|EString]
		public CrossReference getListtypeSimpleTypeCrossReference_3_0() { return cListtypeSimpleTypeCrossReference_3_0; }
		
		//EString
		public RuleCall getListtypeSimpleTypeEStringParserRuleCall_3_0_1() { return cListtypeSimpleTypeEStringParserRuleCall_3_0_1; }
	}
	public class TemplateDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.TemplateDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTemplateDefAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTemplateDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRowsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cRowsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cRowsRowParserRuleCall_4_2_0 = (RuleCall)cRowsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cRowsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cRowsRowParserRuleCall_4_3_1_0 = (RuleCall)cRowsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TemplateDef upctforma::TemplateDef:
		//	{upctforma::TemplateDef}
		//	'TemplateDef'
		//	name=EString
		//	'{' ('rows' '{' rows+=Row ("," rows+=Row)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctforma::TemplateDef} 'TemplateDef' name=EString '{' ('rows' '{' rows+=Row ("," rows+=Row)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctforma::TemplateDef}
		public Action getTemplateDefAction_0() { return cTemplateDefAction_0; }
		
		//'TemplateDef'
		public Keyword getTemplateDefKeyword_1() { return cTemplateDefKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('rows' '{' rows+=Row ("," rows+=Row)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'rows'
		public Keyword getRowsKeyword_4_0() { return cRowsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//rows+=Row
		public Assignment getRowsAssignment_4_2() { return cRowsAssignment_4_2; }
		
		//Row
		public RuleCall getRowsRowParserRuleCall_4_2_0() { return cRowsRowParserRuleCall_4_2_0; }
		
		//("," rows+=Row)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//rows+=Row
		public Assignment getRowsAssignment_4_3_1() { return cRowsAssignment_4_3_1; }
		
		//Row
		public RuleCall getRowsRowParserRuleCall_4_3_1_0() { return cRowsRowParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EvaluationUnit_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.EvaluationUnit_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEvaluationUnitAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEvaluationUnitKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNumberquestionsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNumberquestionsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNumberquestionsEIntParserRuleCall_4_1_0 = (RuleCall)cNumberquestionsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cQuestionsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cQuestionsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cQuestionsQuestionParserRuleCall_5_2_0 = (RuleCall)cQuestionsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cQuestionsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cQuestionsQuestionParserRuleCall_5_3_1_0 = (RuleCall)cQuestionsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//EvaluationUnit_Impl upctformaevalua::EvaluationUnit:
		//	{upctformaevalua::EvaluationUnit}
		//	'EvaluationUnit'
		//	name=EString
		//	'{' ('numberquestions' numberquestions=EInt)? ('questions' '{' questions+=Question ("," questions+=Question)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctformaevalua::EvaluationUnit} 'EvaluationUnit' name=EString '{' ('numberquestions' numberquestions=EInt)?
		//('questions' '{' questions+=Question ("," questions+=Question)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctformaevalua::EvaluationUnit}
		public Action getEvaluationUnitAction_0() { return cEvaluationUnitAction_0; }
		
		//'EvaluationUnit'
		public Keyword getEvaluationUnitKeyword_1() { return cEvaluationUnitKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('numberquestions' numberquestions=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'numberquestions'
		public Keyword getNumberquestionsKeyword_4_0() { return cNumberquestionsKeyword_4_0; }
		
		//numberquestions=EInt
		public Assignment getNumberquestionsAssignment_4_1() { return cNumberquestionsAssignment_4_1; }
		
		//EInt
		public RuleCall getNumberquestionsEIntParserRuleCall_4_1_0() { return cNumberquestionsEIntParserRuleCall_4_1_0; }
		
		//('questions' '{' questions+=Question ("," questions+=Question)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'questions'
		public Keyword getQuestionsKeyword_5_0() { return cQuestionsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//questions+=Question
		public Assignment getQuestionsAssignment_5_2() { return cQuestionsAssignment_5_2; }
		
		//Question
		public RuleCall getQuestionsQuestionParserRuleCall_5_2_0() { return cQuestionsQuestionParserRuleCall_5_2_0; }
		
		//("," questions+=Question)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//questions+=Question
		public Assignment getQuestionsAssignment_5_3_1() { return cQuestionsAssignment_5_3_1; }
		
		//Question
		public RuleCall getQuestionsQuestionParserRuleCall_5_3_1_0() { return cQuestionsQuestionParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class Question_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Question_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cQuestionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cQuestionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCorrectfeedbackKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCorrectfeedbackAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCorrectfeedbackEStringParserRuleCall_3_1_0 = (RuleCall)cCorrectfeedbackAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIncorrectfeedbackKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIncorrectfeedbackAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIncorrectfeedbackEStringParserRuleCall_4_1_0 = (RuleCall)cIncorrectfeedbackAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Question_Impl upctformaevalua::Question:
		//	{upctformaevalua::Question}
		//	'Question'
		//	'{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctformaevalua::Question} 'Question' '{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback'
		//incorrectfeedback=EString)? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctformaevalua::Question}
		public Action getQuestionAction_0() { return cQuestionAction_0; }
		
		//'Question'
		public Keyword getQuestionKeyword_1() { return cQuestionKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('correctfeedback' correctfeedback=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'correctfeedback'
		public Keyword getCorrectfeedbackKeyword_3_0() { return cCorrectfeedbackKeyword_3_0; }
		
		//correctfeedback=EString
		public Assignment getCorrectfeedbackAssignment_3_1() { return cCorrectfeedbackAssignment_3_1; }
		
		//EString
		public RuleCall getCorrectfeedbackEStringParserRuleCall_3_1_0() { return cCorrectfeedbackEStringParserRuleCall_3_1_0; }
		
		//('incorrectfeedback' incorrectfeedback=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'incorrectfeedback'
		public Keyword getIncorrectfeedbackKeyword_4_0() { return cIncorrectfeedbackKeyword_4_0; }
		
		//incorrectfeedback=EString
		public Assignment getIncorrectfeedbackAssignment_4_1() { return cIncorrectfeedbackAssignment_4_1; }
		
		//EString
		public RuleCall getIncorrectfeedbackEStringParserRuleCall_4_1_0() { return cIncorrectfeedbackEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class TrainingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Training");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTrainingAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTrainingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNumberquestionsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNumberquestionsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNumberquestionsEIntParserRuleCall_4_1_0 = (RuleCall)cNumberquestionsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAttemptsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAttemptsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAttemptsEIntParserRuleCall_5_1_0 = (RuleCall)cAttemptsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cGradeKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cGradeAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cGradeTypeGradeEnumRuleCall_6_1_0 = (RuleCall)cGradeAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cQuestionsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cQuestionsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cQuestionsQuestionParserRuleCall_7_2_0 = (RuleCall)cQuestionsAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cQuestionsAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cQuestionsQuestionParserRuleCall_7_3_1_0 = (RuleCall)cQuestionsAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Training upctformaevalua::Training:
		//	{upctformaevalua::Training}
		//	'Training'
		//	name=EString
		//	'{' ('numberquestions' numberquestions=EInt)? ('Attempts' Attempts=EInt)? ('grade' grade=TypeGrade)? ('questions' '{'
		//	questions+=Question ("," questions+=Question)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctformaevalua::Training} 'Training' name=EString '{' ('numberquestions' numberquestions=EInt)? ('Attempts'
		//Attempts=EInt)? ('grade' grade=TypeGrade)? ('questions' '{' questions+=Question ("," questions+=Question)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctformaevalua::Training}
		public Action getTrainingAction_0() { return cTrainingAction_0; }
		
		//'Training'
		public Keyword getTrainingKeyword_1() { return cTrainingKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('numberquestions' numberquestions=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'numberquestions'
		public Keyword getNumberquestionsKeyword_4_0() { return cNumberquestionsKeyword_4_0; }
		
		//numberquestions=EInt
		public Assignment getNumberquestionsAssignment_4_1() { return cNumberquestionsAssignment_4_1; }
		
		//EInt
		public RuleCall getNumberquestionsEIntParserRuleCall_4_1_0() { return cNumberquestionsEIntParserRuleCall_4_1_0; }
		
		//('Attempts' Attempts=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'Attempts'
		public Keyword getAttemptsKeyword_5_0() { return cAttemptsKeyword_5_0; }
		
		//Attempts=EInt
		public Assignment getAttemptsAssignment_5_1() { return cAttemptsAssignment_5_1; }
		
		//EInt
		public RuleCall getAttemptsEIntParserRuleCall_5_1_0() { return cAttemptsEIntParserRuleCall_5_1_0; }
		
		//('grade' grade=TypeGrade)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'grade'
		public Keyword getGradeKeyword_6_0() { return cGradeKeyword_6_0; }
		
		//grade=TypeGrade
		public Assignment getGradeAssignment_6_1() { return cGradeAssignment_6_1; }
		
		//TypeGrade
		public RuleCall getGradeTypeGradeEnumRuleCall_6_1_0() { return cGradeTypeGradeEnumRuleCall_6_1_0; }
		
		//('questions' '{' questions+=Question ("," questions+=Question)* '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'questions'
		public Keyword getQuestionsKeyword_7_0() { return cQuestionsKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//questions+=Question
		public Assignment getQuestionsAssignment_7_2() { return cQuestionsAssignment_7_2; }
		
		//Question
		public RuleCall getQuestionsQuestionParserRuleCall_7_2_0() { return cQuestionsQuestionParserRuleCall_7_2_0; }
		
		//("," questions+=Question)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//questions+=Question
		public Assignment getQuestionsAssignment_7_3_1() { return cQuestionsAssignment_7_3_1; }
		
		//Question
		public RuleCall getQuestionsQuestionParserRuleCall_7_3_1_0() { return cQuestionsQuestionParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class FinalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Final");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFinalAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFinalKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNumberquestionsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNumberquestionsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNumberquestionsEIntParserRuleCall_4_1_0 = (RuleCall)cNumberquestionsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cQuestionsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cQuestionsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cQuestionsQuestionParserRuleCall_5_2_0 = (RuleCall)cQuestionsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cQuestionsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cQuestionsQuestionParserRuleCall_5_3_1_0 = (RuleCall)cQuestionsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Final upctformaevalua::Final:
		//	{upctformaevalua::Final}
		//	'Final'
		//	name=EString
		//	'{' ('numberquestions' numberquestions=EInt)? ('questions' '{' questions+=Question ("," questions+=Question)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctformaevalua::Final} 'Final' name=EString '{' ('numberquestions' numberquestions=EInt)? ('questions' '{'
		//questions+=Question ("," questions+=Question)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctformaevalua::Final}
		public Action getFinalAction_0() { return cFinalAction_0; }
		
		//'Final'
		public Keyword getFinalKeyword_1() { return cFinalKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('numberquestions' numberquestions=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'numberquestions'
		public Keyword getNumberquestionsKeyword_4_0() { return cNumberquestionsKeyword_4_0; }
		
		//numberquestions=EInt
		public Assignment getNumberquestionsAssignment_4_1() { return cNumberquestionsAssignment_4_1; }
		
		//EInt
		public RuleCall getNumberquestionsEIntParserRuleCall_4_1_0() { return cNumberquestionsEIntParserRuleCall_4_1_0; }
		
		//('questions' '{' questions+=Question ("," questions+=Question)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'questions'
		public Keyword getQuestionsKeyword_5_0() { return cQuestionsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//questions+=Question
		public Assignment getQuestionsAssignment_5_2() { return cQuestionsAssignment_5_2; }
		
		//Question
		public RuleCall getQuestionsQuestionParserRuleCall_5_2_0() { return cQuestionsQuestionParserRuleCall_5_2_0; }
		
		//("," questions+=Question)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//questions+=Question
		public Assignment getQuestionsAssignment_5_3_1() { return cQuestionsAssignment_5_3_1; }
		
		//Question
		public RuleCall getQuestionsQuestionParserRuleCall_5_3_1_0() { return cQuestionsQuestionParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class UniqueAnswerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.UniqueAnswer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUniqueAnswerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCorrectfeedbackKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCorrectfeedbackAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCorrectfeedbackEStringParserRuleCall_2_1_0 = (RuleCall)cCorrectfeedbackAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIncorrectfeedbackKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIncorrectfeedbackAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIncorrectfeedbackEStringParserRuleCall_3_1_0 = (RuleCall)cIncorrectfeedbackAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCorrectanswerKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCorrectanswerAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCorrectanswerEIntParserRuleCall_4_1_0 = (RuleCall)cCorrectanswerAssignment_4_1.eContents().get(0);
		private final Keyword cStatementsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cStatementsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cStatementsParagraph0ParserRuleCall_6_0 = (RuleCall)cStatementsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cAnswersKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cAnswersAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cAnswersUniqueParserRuleCall_7_2_0 = (RuleCall)cAnswersAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cAnswersAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cAnswersUniqueParserRuleCall_7_3_1_0 = (RuleCall)cAnswersAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//UniqueAnswer upctformaevalua::UniqueAnswer:
		//	'UniqueAnswer'
		//	'{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)? ('correctanswer'
		//	correctanswer=EInt)?
		//	'statements' statements=Paragraph0 ('answers' '{' answers+=Unique ("," answers+=Unique)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'UniqueAnswer' '{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
		//('correctanswer' correctanswer=EInt)? 'statements' statements=Paragraph0 ('answers' '{' answers+=Unique (","
		//answers+=Unique)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//'UniqueAnswer'
		public Keyword getUniqueAnswerKeyword_0() { return cUniqueAnswerKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('correctfeedback' correctfeedback=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'correctfeedback'
		public Keyword getCorrectfeedbackKeyword_2_0() { return cCorrectfeedbackKeyword_2_0; }
		
		//correctfeedback=EString
		public Assignment getCorrectfeedbackAssignment_2_1() { return cCorrectfeedbackAssignment_2_1; }
		
		//EString
		public RuleCall getCorrectfeedbackEStringParserRuleCall_2_1_0() { return cCorrectfeedbackEStringParserRuleCall_2_1_0; }
		
		//('incorrectfeedback' incorrectfeedback=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'incorrectfeedback'
		public Keyword getIncorrectfeedbackKeyword_3_0() { return cIncorrectfeedbackKeyword_3_0; }
		
		//incorrectfeedback=EString
		public Assignment getIncorrectfeedbackAssignment_3_1() { return cIncorrectfeedbackAssignment_3_1; }
		
		//EString
		public RuleCall getIncorrectfeedbackEStringParserRuleCall_3_1_0() { return cIncorrectfeedbackEStringParserRuleCall_3_1_0; }
		
		//('correctanswer' correctanswer=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'correctanswer'
		public Keyword getCorrectanswerKeyword_4_0() { return cCorrectanswerKeyword_4_0; }
		
		//correctanswer=EInt
		public Assignment getCorrectanswerAssignment_4_1() { return cCorrectanswerAssignment_4_1; }
		
		//EInt
		public RuleCall getCorrectanswerEIntParserRuleCall_4_1_0() { return cCorrectanswerEIntParserRuleCall_4_1_0; }
		
		//'statements'
		public Keyword getStatementsKeyword_5() { return cStatementsKeyword_5; }
		
		//statements=Paragraph0
		public Assignment getStatementsAssignment_6() { return cStatementsAssignment_6; }
		
		//Paragraph0
		public RuleCall getStatementsParagraph0ParserRuleCall_6_0() { return cStatementsParagraph0ParserRuleCall_6_0; }
		
		//('answers' '{' answers+=Unique ("," answers+=Unique)* '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'answers'
		public Keyword getAnswersKeyword_7_0() { return cAnswersKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//answers+=Unique
		public Assignment getAnswersAssignment_7_2() { return cAnswersAssignment_7_2; }
		
		//Unique
		public RuleCall getAnswersUniqueParserRuleCall_7_2_0() { return cAnswersUniqueParserRuleCall_7_2_0; }
		
		//("," answers+=Unique)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//answers+=Unique
		public Assignment getAnswersAssignment_7_3_1() { return cAnswersAssignment_7_3_1; }
		
		//Unique
		public RuleCall getAnswersUniqueParserRuleCall_7_3_1_0() { return cAnswersUniqueParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class MultipleAnswerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.MultipleAnswer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMultipleAnswerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCorrectfeedbackKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCorrectfeedbackAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCorrectfeedbackEStringParserRuleCall_2_1_0 = (RuleCall)cCorrectfeedbackAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIncorrectfeedbackKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIncorrectfeedbackAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIncorrectfeedbackEStringParserRuleCall_3_1_0 = (RuleCall)cIncorrectfeedbackAssignment_3_1.eContents().get(0);
		private final Keyword cStatementsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cStatementsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cStatementsParagraph0ParserRuleCall_5_0 = (RuleCall)cStatementsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAnswersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cAnswersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cAnswersMultipleParserRuleCall_6_2_0 = (RuleCall)cAnswersAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cAnswersAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cAnswersMultipleParserRuleCall_6_3_1_0 = (RuleCall)cAnswersAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//MultipleAnswer upctformaevalua::MultipleAnswer:
		//	'MultipleAnswer'
		//	'{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
		//	'statements' statements=Paragraph0 ('answers' '{' answers+=Multiple ("," answers+=Multiple)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'MultipleAnswer' '{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
		//'statements' statements=Paragraph0 ('answers' '{' answers+=Multiple ("," answers+=Multiple)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//'MultipleAnswer'
		public Keyword getMultipleAnswerKeyword_0() { return cMultipleAnswerKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('correctfeedback' correctfeedback=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'correctfeedback'
		public Keyword getCorrectfeedbackKeyword_2_0() { return cCorrectfeedbackKeyword_2_0; }
		
		//correctfeedback=EString
		public Assignment getCorrectfeedbackAssignment_2_1() { return cCorrectfeedbackAssignment_2_1; }
		
		//EString
		public RuleCall getCorrectfeedbackEStringParserRuleCall_2_1_0() { return cCorrectfeedbackEStringParserRuleCall_2_1_0; }
		
		//('incorrectfeedback' incorrectfeedback=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'incorrectfeedback'
		public Keyword getIncorrectfeedbackKeyword_3_0() { return cIncorrectfeedbackKeyword_3_0; }
		
		//incorrectfeedback=EString
		public Assignment getIncorrectfeedbackAssignment_3_1() { return cIncorrectfeedbackAssignment_3_1; }
		
		//EString
		public RuleCall getIncorrectfeedbackEStringParserRuleCall_3_1_0() { return cIncorrectfeedbackEStringParserRuleCall_3_1_0; }
		
		//'statements'
		public Keyword getStatementsKeyword_4() { return cStatementsKeyword_4; }
		
		//statements=Paragraph0
		public Assignment getStatementsAssignment_5() { return cStatementsAssignment_5; }
		
		//Paragraph0
		public RuleCall getStatementsParagraph0ParserRuleCall_5_0() { return cStatementsParagraph0ParserRuleCall_5_0; }
		
		//('answers' '{' answers+=Multiple ("," answers+=Multiple)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'answers'
		public Keyword getAnswersKeyword_6_0() { return cAnswersKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//answers+=Multiple
		public Assignment getAnswersAssignment_6_2() { return cAnswersAssignment_6_2; }
		
		//Multiple
		public RuleCall getAnswersMultipleParserRuleCall_6_2_0() { return cAnswersMultipleParserRuleCall_6_2_0; }
		
		//("," answers+=Multiple)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//answers+=Multiple
		public Assignment getAnswersAssignment_6_3_1() { return cAnswersAssignment_6_3_1; }
		
		//Multiple
		public RuleCall getAnswersMultipleParserRuleCall_6_3_1_0() { return cAnswersMultipleParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class FillingAnswerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.FillingAnswer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFillingAnswerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFillingAnswerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCorrectfeedbackKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCorrectfeedbackAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCorrectfeedbackEStringParserRuleCall_3_1_0 = (RuleCall)cCorrectfeedbackAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIncorrectfeedbackKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIncorrectfeedbackAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIncorrectfeedbackEStringParserRuleCall_4_1_0 = (RuleCall)cIncorrectfeedbackAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cHolesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cHolesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cHolesHoleParserRuleCall_5_2_0 = (RuleCall)cHolesAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cHolesAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cHolesHoleParserRuleCall_5_3_1_0 = (RuleCall)cHolesAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//FillingAnswer upctformaevalua::FillingAnswer:
		//	{upctformaevalua::FillingAnswer}
		//	'FillingAnswer'
		//	'{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)? ('holes' '{'
		//	holes+=Hole ("," holes+=Hole)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctformaevalua::FillingAnswer} 'FillingAnswer' '{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback'
		//incorrectfeedback=EString)? ('holes' '{' holes+=Hole ("," holes+=Hole)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctformaevalua::FillingAnswer}
		public Action getFillingAnswerAction_0() { return cFillingAnswerAction_0; }
		
		//'FillingAnswer'
		public Keyword getFillingAnswerKeyword_1() { return cFillingAnswerKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('correctfeedback' correctfeedback=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'correctfeedback'
		public Keyword getCorrectfeedbackKeyword_3_0() { return cCorrectfeedbackKeyword_3_0; }
		
		//correctfeedback=EString
		public Assignment getCorrectfeedbackAssignment_3_1() { return cCorrectfeedbackAssignment_3_1; }
		
		//EString
		public RuleCall getCorrectfeedbackEStringParserRuleCall_3_1_0() { return cCorrectfeedbackEStringParserRuleCall_3_1_0; }
		
		//('incorrectfeedback' incorrectfeedback=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'incorrectfeedback'
		public Keyword getIncorrectfeedbackKeyword_4_0() { return cIncorrectfeedbackKeyword_4_0; }
		
		//incorrectfeedback=EString
		public Assignment getIncorrectfeedbackAssignment_4_1() { return cIncorrectfeedbackAssignment_4_1; }
		
		//EString
		public RuleCall getIncorrectfeedbackEStringParserRuleCall_4_1_0() { return cIncorrectfeedbackEStringParserRuleCall_4_1_0; }
		
		//('holes' '{' holes+=Hole ("," holes+=Hole)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'holes'
		public Keyword getHolesKeyword_5_0() { return cHolesKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//holes+=Hole
		public Assignment getHolesAssignment_5_2() { return cHolesAssignment_5_2; }
		
		//Hole
		public RuleCall getHolesHoleParserRuleCall_5_2_0() { return cHolesHoleParserRuleCall_5_2_0; }
		
		//("," holes+=Hole)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//holes+=Hole
		public Assignment getHolesAssignment_5_3_1() { return cHolesAssignment_5_3_1; }
		
		//Hole
		public RuleCall getHolesHoleParserRuleCall_5_3_1_0() { return cHolesHoleParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class TrueOrFalseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.TrueOrFalse");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTrueOrFalseAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTrueOrFalseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCorrectfeedbackKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCorrectfeedbackAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCorrectfeedbackEStringParserRuleCall_3_1_0 = (RuleCall)cCorrectfeedbackAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIncorrectfeedbackKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIncorrectfeedbackAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIncorrectfeedbackEStringParserRuleCall_4_1_0 = (RuleCall)cIncorrectfeedbackAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAssertionsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cAssertionsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cAssertionsAssertionParserRuleCall_5_2_0 = (RuleCall)cAssertionsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cAssertionsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cAssertionsAssertionParserRuleCall_5_3_1_0 = (RuleCall)cAssertionsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//TrueOrFalse upctformaevalua::TrueOrFalse:
		//	{upctformaevalua::TrueOrFalse}
		//	'TrueOrFalse'
		//	'{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)? ('assertions' '{'
		//	assertions+=Assertion ("," assertions+=Assertion)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctformaevalua::TrueOrFalse} 'TrueOrFalse' '{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback'
		//incorrectfeedback=EString)? ('assertions' '{' assertions+=Assertion ("," assertions+=Assertion)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctformaevalua::TrueOrFalse}
		public Action getTrueOrFalseAction_0() { return cTrueOrFalseAction_0; }
		
		//'TrueOrFalse'
		public Keyword getTrueOrFalseKeyword_1() { return cTrueOrFalseKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('correctfeedback' correctfeedback=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'correctfeedback'
		public Keyword getCorrectfeedbackKeyword_3_0() { return cCorrectfeedbackKeyword_3_0; }
		
		//correctfeedback=EString
		public Assignment getCorrectfeedbackAssignment_3_1() { return cCorrectfeedbackAssignment_3_1; }
		
		//EString
		public RuleCall getCorrectfeedbackEStringParserRuleCall_3_1_0() { return cCorrectfeedbackEStringParserRuleCall_3_1_0; }
		
		//('incorrectfeedback' incorrectfeedback=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'incorrectfeedback'
		public Keyword getIncorrectfeedbackKeyword_4_0() { return cIncorrectfeedbackKeyword_4_0; }
		
		//incorrectfeedback=EString
		public Assignment getIncorrectfeedbackAssignment_4_1() { return cIncorrectfeedbackAssignment_4_1; }
		
		//EString
		public RuleCall getIncorrectfeedbackEStringParserRuleCall_4_1_0() { return cIncorrectfeedbackEStringParserRuleCall_4_1_0; }
		
		//('assertions' '{' assertions+=Assertion ("," assertions+=Assertion)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'assertions'
		public Keyword getAssertionsKeyword_5_0() { return cAssertionsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//assertions+=Assertion
		public Assignment getAssertionsAssignment_5_2() { return cAssertionsAssignment_5_2; }
		
		//Assertion
		public RuleCall getAssertionsAssertionParserRuleCall_5_2_0() { return cAssertionsAssertionParserRuleCall_5_2_0; }
		
		//("," assertions+=Assertion)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//assertions+=Assertion
		public Assignment getAssertionsAssignment_5_3_1() { return cAssertionsAssignment_5_3_1; }
		
		//Assertion
		public RuleCall getAssertionsAssertionParserRuleCall_5_3_1_0() { return cAssertionsAssertionParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class Paragraph0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Paragraph0");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParagraphAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cParagraphKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTextKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTextAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTextEStringParserRuleCall_3_1_0 = (RuleCall)cTextAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Paragraph0 upctformaevalua::Paragraph:
		//	{upctformaevalua::Paragraph}
		//	'Paragraph'
		//	'{' ('text' text=EString)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctformaevalua::Paragraph} 'Paragraph' '{' ('text' text=EString)? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctformaevalua::Paragraph}
		public Action getParagraphAction_0() { return cParagraphAction_0; }
		
		//'Paragraph'
		public Keyword getParagraphKeyword_1() { return cParagraphKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('text' text=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'text'
		public Keyword getTextKeyword_3_0() { return cTextKeyword_3_0; }
		
		//text=EString
		public Assignment getTextAssignment_3_1() { return cTextAssignment_3_1; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_3_1_0() { return cTextEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class UniqueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Unique");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUniqueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUniqueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTextKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTextAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTextEStringParserRuleCall_3_1_0 = (RuleCall)cTextAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Unique upctformaevalua::Unique:
		//	{upctformaevalua::Unique}
		//	'Unique'
		//	'{' ('text' text=EString)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctformaevalua::Unique} 'Unique' '{' ('text' text=EString)? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctformaevalua::Unique}
		public Action getUniqueAction_0() { return cUniqueAction_0; }
		
		//'Unique'
		public Keyword getUniqueKeyword_1() { return cUniqueKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('text' text=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'text'
		public Keyword getTextKeyword_3_0() { return cTextKeyword_3_0; }
		
		//text=EString
		public Assignment getTextAssignment_3_1() { return cTextAssignment_3_1; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_3_1_0() { return cTextEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class MultipleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Multiple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMultipleAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cValueValueKeyword_1_0 = (Keyword)cValueAssignment_1.eContents().get(0);
		private final Keyword cMultipleKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTextKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTextAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTextEStringParserRuleCall_4_1_0 = (RuleCall)cTextAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Multiple upctformaevalua::Multiple:
		//	{upctformaevalua::Multiple} value?='value'?
		//	'Multiple'
		//	'{' ('text' text=EString)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctformaevalua::Multiple} value?='value'? 'Multiple' '{' ('text' text=EString)? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctformaevalua::Multiple}
		public Action getMultipleAction_0() { return cMultipleAction_0; }
		
		//value?='value'?
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }
		
		//'value'
		public Keyword getValueValueKeyword_1_0() { return cValueValueKeyword_1_0; }
		
		//'Multiple'
		public Keyword getMultipleKeyword_2() { return cMultipleKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('text' text=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'text'
		public Keyword getTextKeyword_4_0() { return cTextKeyword_4_0; }
		
		//text=EString
		public Assignment getTextAssignment_4_1() { return cTextAssignment_4_1; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_4_1_0() { return cTextEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class HoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Hole");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHoleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHoleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTextKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTextAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTextEStringParserRuleCall_3_1_0 = (RuleCall)cTextAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeTypeHoleEnumRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Hole upctformaevalua::Hole:
		//	{upctformaevalua::Hole}
		//	'Hole'
		//	'{' ('text' text=EString)? ('type' type=TypeHole)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctformaevalua::Hole} 'Hole' '{' ('text' text=EString)? ('type' type=TypeHole)? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctformaevalua::Hole}
		public Action getHoleAction_0() { return cHoleAction_0; }
		
		//'Hole'
		public Keyword getHoleKeyword_1() { return cHoleKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('text' text=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'text'
		public Keyword getTextKeyword_3_0() { return cTextKeyword_3_0; }
		
		//text=EString
		public Assignment getTextAssignment_3_1() { return cTextAssignment_3_1; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_3_1_0() { return cTextEStringParserRuleCall_3_1_0; }
		
		//('type' type=TypeHole)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'type'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//type=TypeHole
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//TypeHole
		public RuleCall getTypeTypeHoleEnumRuleCall_4_1_0() { return cTypeTypeHoleEnumRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AssertionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.Assertion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAssertionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cValueValueKeyword_1_0 = (Keyword)cValueAssignment_1.eContents().get(0);
		private final Keyword cAssertionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTextKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTextAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTextEStringParserRuleCall_4_1_0 = (RuleCall)cTextAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Assertion upctformaevalua::Assertion:
		//	{upctformaevalua::Assertion} value?='value'?
		//	'Assertion'
		//	'{' ('text' text=EString)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{upctformaevalua::Assertion} value?='value'? 'Assertion' '{' ('text' text=EString)? '}'
		public Group getGroup() { return cGroup; }
		
		//{upctformaevalua::Assertion}
		public Action getAssertionAction_0() { return cAssertionAction_0; }
		
		//value?='value'?
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }
		
		//'value'
		public Keyword getValueValueKeyword_1_0() { return cValueValueKeyword_1_0; }
		
		//'Assertion'
		public Keyword getAssertionKeyword_2() { return cAssertionKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('text' text=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'text'
		public Keyword getTextKeyword_4_0() { return cTextKeyword_4_0; }
		
		//text=EString
		public Assignment getTextAssignment_4_1() { return cTextAssignment_4_1; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_4_1_0() { return cTextEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	
	public class TypeStateElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.TypeState");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOpenEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOpenOpenKeyword_0_0 = (Keyword)cOpenEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCloseEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCloseCloseKeyword_1_0 = (Keyword)cCloseEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum TypeState:
		//	open | close;
		public EnumRule getRule() { return rule; }
		
		//open | close
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//open
		public EnumLiteralDeclaration getOpenEnumLiteralDeclaration_0() { return cOpenEnumLiteralDeclaration_0; }
		
		//'open'
		public Keyword getOpenOpenKeyword_0_0() { return cOpenOpenKeyword_0_0; }
		
		//close
		public EnumLiteralDeclaration getCloseEnumLiteralDeclaration_1() { return cCloseEnumLiteralDeclaration_1; }
		
		//'close'
		public Keyword getCloseCloseKeyword_1_0() { return cCloseCloseKeyword_1_0; }
	}
	public class TypeRuleElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.TypeRule");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCompletedEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCompletedCompletedKeyword_0_0 = (Keyword)cCompletedEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLoginDailyEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLoginDailyLoginDailyKeyword_1_0 = (Keyword)cLoginDailyEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cScoresEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cScoresScoresKeyword_2_0 = (Keyword)cScoresEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TypeRule:
		//	completed | loginDaily | scores;
		public EnumRule getRule() { return rule; }
		
		//completed | loginDaily | scores
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//completed
		public EnumLiteralDeclaration getCompletedEnumLiteralDeclaration_0() { return cCompletedEnumLiteralDeclaration_0; }
		
		//'completed'
		public Keyword getCompletedCompletedKeyword_0_0() { return cCompletedCompletedKeyword_0_0; }
		
		//loginDaily
		public EnumLiteralDeclaration getLoginDailyEnumLiteralDeclaration_1() { return cLoginDailyEnumLiteralDeclaration_1; }
		
		//'loginDaily'
		public Keyword getLoginDailyLoginDailyKeyword_1_0() { return cLoginDailyLoginDailyKeyword_1_0; }
		
		//scores
		public EnumLiteralDeclaration getScoresEnumLiteralDeclaration_2() { return cScoresEnumLiteralDeclaration_2; }
		
		//'scores'
		public Keyword getScoresScoresKeyword_2_0() { return cScoresScoresKeyword_2_0; }
	}
	public class TypeMissionsElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.TypeMissions");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStrongEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStrongStrongKeyword_0_0 = (Keyword)cStrongEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cWeakEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cWeakWeakKeyword_1_0 = (Keyword)cWeakEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cInhibitorEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cInhibitorInhibitorKeyword_2_0 = (Keyword)cInhibitorEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cScoresEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cScoresScoresKeyword_3_0 = (Keyword)cScoresEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum TypeMissions:
		//	strong | weak | inhibitor | scores;
		public EnumRule getRule() { return rule; }
		
		//strong | weak | inhibitor | scores
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//strong
		public EnumLiteralDeclaration getStrongEnumLiteralDeclaration_0() { return cStrongEnumLiteralDeclaration_0; }
		
		//'strong'
		public Keyword getStrongStrongKeyword_0_0() { return cStrongStrongKeyword_0_0; }
		
		//weak
		public EnumLiteralDeclaration getWeakEnumLiteralDeclaration_1() { return cWeakEnumLiteralDeclaration_1; }
		
		//'weak'
		public Keyword getWeakWeakKeyword_1_0() { return cWeakWeakKeyword_1_0; }
		
		//inhibitor
		public EnumLiteralDeclaration getInhibitorEnumLiteralDeclaration_2() { return cInhibitorEnumLiteralDeclaration_2; }
		
		//'inhibitor'
		public Keyword getInhibitorInhibitorKeyword_2_0() { return cInhibitorInhibitorKeyword_2_0; }
		
		//scores
		public EnumLiteralDeclaration getScoresEnumLiteralDeclaration_3() { return cScoresEnumLiteralDeclaration_3; }
		
		//'scores'
		public Keyword getScoresScoresKeyword_3_0() { return cScoresScoresKeyword_3_0; }
	}
	public class TypeSimpleElementElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.TypeSimpleElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTextEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTextTextKeyword_0_0 = (Keyword)cTextEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cImageEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cImageImageKeyword_1_0 = (Keyword)cImageEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cVideoEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cVideoVideoKeyword_2_0 = (Keyword)cVideoEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cUndefinedEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cUndefinedUndefinedKeyword_3_0 = (Keyword)cUndefinedEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum TypeSimpleElement returns upctforma::TypeSimpleElement:
		//	Text | Image | Video | Undefined;
		public EnumRule getRule() { return rule; }
		
		//Text | Image | Video | Undefined
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Text
		public EnumLiteralDeclaration getTextEnumLiteralDeclaration_0() { return cTextEnumLiteralDeclaration_0; }
		
		//'Text'
		public Keyword getTextTextKeyword_0_0() { return cTextTextKeyword_0_0; }
		
		//Image
		public EnumLiteralDeclaration getImageEnumLiteralDeclaration_1() { return cImageEnumLiteralDeclaration_1; }
		
		//'Image'
		public Keyword getImageImageKeyword_1_0() { return cImageImageKeyword_1_0; }
		
		//Video
		public EnumLiteralDeclaration getVideoEnumLiteralDeclaration_2() { return cVideoEnumLiteralDeclaration_2; }
		
		//'Video'
		public Keyword getVideoVideoKeyword_2_0() { return cVideoVideoKeyword_2_0; }
		
		//Undefined
		public EnumLiteralDeclaration getUndefinedEnumLiteralDeclaration_3() { return cUndefinedEnumLiteralDeclaration_3; }
		
		//'Undefined'
		public Keyword getUndefinedUndefinedKeyword_3_0() { return cUndefinedUndefinedKeyword_3_0; }
	}
	public class TypeHoleElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.TypeHole");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cVisibleEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cVisibleVisibleKeyword_0_0 = (Keyword)cVisibleEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cHoleEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cHoleHoleKeyword_1_0 = (Keyword)cHoleEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum TypeHole returns upctformaevalua::TypeHole:
		//	visible | hole;
		public EnumRule getRule() { return rule; }
		
		//visible | hole
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//visible
		public EnumLiteralDeclaration getVisibleEnumLiteralDeclaration_0() { return cVisibleEnumLiteralDeclaration_0; }
		
		//'visible'
		public Keyword getVisibleVisibleKeyword_0_0() { return cVisibleVisibleKeyword_0_0; }
		
		//hole
		public EnumLiteralDeclaration getHoleEnumLiteralDeclaration_1() { return cHoleEnumLiteralDeclaration_1; }
		
		//'hole'
		public Keyword getHoleHoleKeyword_1_0() { return cHoleHoleKeyword_1_0; }
	}
	public class TypeGradeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformagami.TypeGrade");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cHighestEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cHighestHighestKeyword_0_0 = (Keyword)cHighestEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMiddleEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMiddleMiddleKeyword_1_0 = (Keyword)cMiddleEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLowestEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLowestLowestKeyword_2_0 = (Keyword)cLowestEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TypeGrade returns upctformaevalua::TypeGrade:
		//	highest | middle | lowest;
		public EnumRule getRule() { return rule; }
		
		//highest | middle | lowest
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//highest
		public EnumLiteralDeclaration getHighestEnumLiteralDeclaration_0() { return cHighestEnumLiteralDeclaration_0; }
		
		//'highest'
		public Keyword getHighestHighestKeyword_0_0() { return cHighestHighestKeyword_0_0; }
		
		//middle
		public EnumLiteralDeclaration getMiddleEnumLiteralDeclaration_1() { return cMiddleEnumLiteralDeclaration_1; }
		
		//'middle'
		public Keyword getMiddleMiddleKeyword_1_0() { return cMiddleMiddleKeyword_1_0; }
		
		//lowest
		public EnumLiteralDeclaration getLowestEnumLiteralDeclaration_2() { return cLowestEnumLiteralDeclaration_2; }
		
		//'lowest'
		public Keyword getLowestLowestKeyword_2_0() { return cLowestLowestKeyword_2_0; }
	}
	
	private final GamificationElements pGamification;
	private final QualifiedNameElements pQualifiedName;
	private final ImportElements pImport;
	private final QualifiedNameWithWildcardElements pQualifiedNameWithWildcard;
	private final WidgetDefPointElements pWidgetDefPoint;
	private final BadgeElements pBadge;
	private final TypeStateElements eTypeState;
	private final UnitPointElements pUnitPoint;
	private final EStringElements pEString;
	private final PointElements pPoint;
	private final TypeRuleElements eTypeRule;
	private final EIntElements pEInt;
	private final EDoubleElements pEDouble;
	private final BadgeUnitElements pBadgeUnit;
	private final MissionElements pMission;
	private final TypeMissionsElements eTypeMissions;
	private final EBooleanElements pEBoolean;
	private final EvaluationUnitElements pEvaluationUnit;
	private final ParameterElements pParameter;
	private final ContentElementElements pContentElement;
	private final ArgumentElements pArgument;
	private final TypeElements pType;
	private final SimpleElementElements pSimpleElement;
	private final QuestionElements pQuestion;
	private final UnitElements pUnit;
	private final WidgetTypeElements pWidgetType;
	private final SectionElements pSection;
	private final RowElements pRow;
	private final ColumnElements pColumn;
	private final UseTemplateElements pUseTemplate;
	private final ContentElement_ImplElements pContentElement_Impl;
	private final ImageElements pImage;
	private final WidgetElements pWidget;
	private final TextElements pText;
	private final Composite_ImplElements pComposite_Impl;
	private final VideoElements pVideo;
	private final SimpleElement_ImplElements pSimpleElement_Impl;
	private final Parameter_ImplElements pParameter_Impl;
	private final FixedElements pFixed;
	private final VariableElements pVariable;
	private final Argument_ImplElements pArgument_Impl;
	private final TabElements pTab;
	private final AnimationElements pAnimation;
	private final DragAndDropElements pDragAndDrop;
	private final CompositeArgument_ImplElements pCompositeArgument_Impl;
	private final ParagraphElements pParagraph;
	private final Type_ImplElements pType_Impl;
	private final SimpleTypeElements pSimpleType;
	private final AggregatedTypeElements pAggregatedType;
	private final ListTypeElements pListType;
	private final TypeSimpleElementElements eTypeSimpleElement;
	private final TemplateDefElements pTemplateDef;
	private final EvaluationUnit_ImplElements pEvaluationUnit_Impl;
	private final Question_ImplElements pQuestion_Impl;
	private final TrainingElements pTraining;
	private final FinalElements pFinal;
	private final UniqueAnswerElements pUniqueAnswer;
	private final MultipleAnswerElements pMultipleAnswer;
	private final FillingAnswerElements pFillingAnswer;
	private final TrueOrFalseElements pTrueOrFalse;
	private final Paragraph0Elements pParagraph0;
	private final UniqueElements pUnique;
	private final MultipleElements pMultiple;
	private final HoleElements pHole;
	private final TypeHoleElements eTypeHole;
	private final AssertionElements pAssertion;
	private final TypeGradeElements eTypeGrade;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public UpctformagamiGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pGamification = new GamificationElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pImport = new ImportElements();
		this.pQualifiedNameWithWildcard = new QualifiedNameWithWildcardElements();
		this.pWidgetDefPoint = new WidgetDefPointElements();
		this.pBadge = new BadgeElements();
		this.eTypeState = new TypeStateElements();
		this.pUnitPoint = new UnitPointElements();
		this.pEString = new EStringElements();
		this.pPoint = new PointElements();
		this.eTypeRule = new TypeRuleElements();
		this.pEInt = new EIntElements();
		this.pEDouble = new EDoubleElements();
		this.pBadgeUnit = new BadgeUnitElements();
		this.pMission = new MissionElements();
		this.eTypeMissions = new TypeMissionsElements();
		this.pEBoolean = new EBooleanElements();
		this.pEvaluationUnit = new EvaluationUnitElements();
		this.pParameter = new ParameterElements();
		this.pContentElement = new ContentElementElements();
		this.pArgument = new ArgumentElements();
		this.pType = new TypeElements();
		this.pSimpleElement = new SimpleElementElements();
		this.pQuestion = new QuestionElements();
		this.pUnit = new UnitElements();
		this.pWidgetType = new WidgetTypeElements();
		this.pSection = new SectionElements();
		this.pRow = new RowElements();
		this.pColumn = new ColumnElements();
		this.pUseTemplate = new UseTemplateElements();
		this.pContentElement_Impl = new ContentElement_ImplElements();
		this.pImage = new ImageElements();
		this.pWidget = new WidgetElements();
		this.pText = new TextElements();
		this.pComposite_Impl = new Composite_ImplElements();
		this.pVideo = new VideoElements();
		this.pSimpleElement_Impl = new SimpleElement_ImplElements();
		this.pParameter_Impl = new Parameter_ImplElements();
		this.pFixed = new FixedElements();
		this.pVariable = new VariableElements();
		this.pArgument_Impl = new Argument_ImplElements();
		this.pTab = new TabElements();
		this.pAnimation = new AnimationElements();
		this.pDragAndDrop = new DragAndDropElements();
		this.pCompositeArgument_Impl = new CompositeArgument_ImplElements();
		this.pParagraph = new ParagraphElements();
		this.pType_Impl = new Type_ImplElements();
		this.pSimpleType = new SimpleTypeElements();
		this.pAggregatedType = new AggregatedTypeElements();
		this.pListType = new ListTypeElements();
		this.eTypeSimpleElement = new TypeSimpleElementElements();
		this.pTemplateDef = new TemplateDefElements();
		this.pEvaluationUnit_Impl = new EvaluationUnit_ImplElements();
		this.pQuestion_Impl = new Question_ImplElements();
		this.pTraining = new TrainingElements();
		this.pFinal = new FinalElements();
		this.pUniqueAnswer = new UniqueAnswerElements();
		this.pMultipleAnswer = new MultipleAnswerElements();
		this.pFillingAnswer = new FillingAnswerElements();
		this.pTrueOrFalse = new TrueOrFalseElements();
		this.pParagraph0 = new Paragraph0Elements();
		this.pUnique = new UniqueElements();
		this.pMultiple = new MultipleElements();
		this.pHole = new HoleElements();
		this.eTypeHole = new TypeHoleElements();
		this.pAssertion = new AssertionElements();
		this.eTypeGrade = new TypeGradeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.Upctformagami".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Gamification:
	//	{Gamification}
	//	'Gamification'
	//	'{' ('import' imports+=Import ("," imports+=Import)* ';')? ('badges' '{' badges+=Badge ("," badges+=Badge)* '}')?
	//	(widgets+=WidgetDefPoint ("," widgets+=WidgetDefPoint)*)? (units+=UnitPoint ("," units+=UnitPoint)*)?
	//	'}';
	public GamificationElements getGamificationAccess() {
		return pGamification;
	}
	
	public ParserRule getGamificationRule() {
		return getGamificationAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//Import:
	//	{Import} importedNamespace=QualifiedNameWithWildcard;
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}
	
	//QualifiedNameWithWildcard:
	//	QualifiedName '.*'?;
	public QualifiedNameWithWildcardElements getQualifiedNameWithWildcardAccess() {
		return pQualifiedNameWithWildcard;
	}
	
	public ParserRule getQualifiedNameWithWildcardRule() {
		return getQualifiedNameWithWildcardAccess().getRule();
	}
	
	//WidgetDefPoint:
	//	{WidgetDefPoint}
	//	'WidgetPoint'
	//	'{' ('widget' widgetref+=[upctforma::WidgetType|EString] ("," widgetref+=[upctforma::WidgetType|EString])*)? ('unit'
	//	unitref+=[upctforma::Unit|EString] ("," unitref+=[upctforma::Unit|EString])*)? (pointswidgetdef+=Point (","
	//	pointswidgetdef+=Point)*)?
	//	'}';
	public WidgetDefPointElements getWidgetDefPointAccess() {
		return pWidgetDefPoint;
	}
	
	public ParserRule getWidgetDefPointRule() {
		return getWidgetDefPointAccess().getRule();
	}
	
	//Badge:
	//	{Badge}
	//	'Badge'
	//	name=EString
	//	'{' ('description' description=EString)? ('url' url=EString)?
	//	'}';
	public BadgeElements getBadgeAccess() {
		return pBadge;
	}
	
	public ParserRule getBadgeRule() {
		return getBadgeAccess().getRule();
	}
	
	//enum TypeState:
	//	open | close;
	public TypeStateElements getTypeStateAccess() {
		return eTypeState;
	}
	
	public EnumRule getTypeStateRule() {
		return getTypeStateAccess().getRule();
	}
	
	//UnitPoint:
	//	{UnitPoint}
	//	'UnitPoint'
	//	'{' ('state' state=TypeState)? ('contentunit' unitref=[upctforma::Unit|EString])? ('evaluationunit'
	//	evalref=[upctformaevalua::EvaluationUnit|EString])? ('URL' URL=EString)? ('image' image=EString)?
	//	(defbadges+=BadgeUnit ("," defbadges+=BadgeUnit)*)? (pointsunit+=Point ("," pointsunit+=Point)*)? ('nextmissions' '{'
	//	missions+=Mission ("," missions+=Mission)* '}')?
	//	'}';
	public UnitPointElements getUnitPointAccess() {
		return pUnitPoint;
	}
	
	public ParserRule getUnitPointRule() {
		return getUnitPointAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Point:
	//	{Point}
	//	'Point'
	//	'{' ('type' type=TypeRule)? ('points' points=EInt)? ('attempt' attempt=EInt)? ('InitialScore' InitialScore=EDouble)?
	//	('FinalScore' FinalScore=EDouble)?
	//	'}';
	public PointElements getPointAccess() {
		return pPoint;
	}
	
	public ParserRule getPointRule() {
		return getPointAccess().getRule();
	}
	
	//enum TypeRule:
	//	completed | loginDaily | scores;
	public TypeRuleElements getTypeRuleAccess() {
		return eTypeRule;
	}
	
	public EnumRule getTypeRuleRule() {
		return getTypeRuleAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EDouble ecore::EDouble:
	//	'-'? INT? '.' INT (('E' | 'e') '-'? INT)?;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	//BadgeUnit:
	//	{BadgeUnit}
	//	'BadgeUnit'
	//	'{' ('type' type=TypeRule)? ('badge' badge=[Badge|EString])?
	//	'}';
	public BadgeUnitElements getBadgeUnitAccess() {
		return pBadgeUnit;
	}
	
	public ParserRule getBadgeUnitRule() {
		return getBadgeUnitAccess().getRule();
	}
	
	//Mission:
	//	{Mission}
	//	'Mission'
	//	'{' ('type' type=TypeMissions)? ('InitialScore' InitialScore=EDouble)? ('FinalScore' FinalScore=EDouble)? ('nextunit'
	//	nextunit=[upctforma::Unit|EString])? ('nexteval' nexteval=[upctformaevalua::EvaluationUnit|EString])?
	//	'}';
	public MissionElements getMissionAccess() {
		return pMission;
	}
	
	public ParserRule getMissionRule() {
		return getMissionAccess().getRule();
	}
	
	//enum TypeMissions:
	//	strong | weak | inhibitor | scores;
	public TypeMissionsElements getTypeMissionsAccess() {
		return eTypeMissions;
	}
	
	public EnumRule getTypeMissionsRule() {
		return getTypeMissionsAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	///////////
	//EvaluationUnit upctformaevalua::EvaluationUnit:
	//	EvaluationUnit_Impl | Training | Final;
	public EvaluationUnitElements getEvaluationUnitAccess() {
		return pEvaluationUnit;
	}
	
	public ParserRule getEvaluationUnitRule() {
		return getEvaluationUnitAccess().getRule();
	}
	
	//Parameter upctforma::Parameter:
	//	Parameter_Impl | Fixed | Variable;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//ContentElement upctforma::ContentElement:
	//	ContentElement_Impl | Column | Image | Widget | Text | Composite_Impl | Video | SimpleElement_Impl | Parameter_Impl |
	//	Row | Fixed | Variable;
	public ContentElementElements getContentElementAccess() {
		return pContentElement;
	}
	
	public ParserRule getContentElementRule() {
		return getContentElementAccess().getRule();
	}
	
	//Argument upctforma::Argument:
	//	Argument_Impl | Image | Widget | Text | Video | SimpleElement_Impl | Tab | Animation | DragAndDrop |
	//	CompositeArgument_Impl;
	public ArgumentElements getArgumentAccess() {
		return pArgument;
	}
	
	public ParserRule getArgumentRule() {
		return getArgumentAccess().getRule();
	}
	
	//Type upctforma::Type:
	//	Type_Impl | SimpleType | AggregatedType | WidgetType | ListType;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//SimpleElement upctforma::SimpleElement:
	//	SimpleElement_Impl | Image | Text | Video;
	public SimpleElementElements getSimpleElementAccess() {
		return pSimpleElement;
	}
	
	public ParserRule getSimpleElementRule() {
		return getSimpleElementAccess().getRule();
	}
	
	//Question upctformaevalua::Question:
	//	Question_Impl | UniqueAnswer | MultipleAnswer | FillingAnswer | TrueOrFalse;
	public QuestionElements getQuestionAccess() {
		return pQuestion;
	}
	
	public ParserRule getQuestionRule() {
		return getQuestionAccess().getRule();
	}
	
	//Unit upctforma::Unit:
	//	'Unit'
	//	name=EString
	//	'{' ('author' author=EString)?
	//	'sections' '{' sections+=Section ("," sections+=Section)* '}'
	//	'}';
	public UnitElements getUnitAccess() {
		return pUnit;
	}
	
	public ParserRule getUnitRule() {
		return getUnitAccess().getRule();
	}
	
	//WidgetType upctforma::WidgetType:
	//	{upctforma::WidgetType}
	//	'WidgetType'
	//	name=EString
	//	'{' ('parameters' '{' parameters+=Parameter ("," parameters+=Parameter)* '}')?
	//	'}';
	public WidgetTypeElements getWidgetTypeAccess() {
		return pWidgetType;
	}
	
	public ParserRule getWidgetTypeRule() {
		return getWidgetTypeAccess().getRule();
	}
	
	//Section upctforma::Section:
	//	{upctforma::Section}
	//	'Section'
	//	name=EString
	//	'{' ('image' image=EString)? ('title' title=EString)? ('rows' '{' rows+=Row ("," rows+=Row)* '}')?
	//	'}';
	public SectionElements getSectionAccess() {
		return pSection;
	}
	
	public ParserRule getSectionRule() {
		return getSectionAccess().getRule();
	}
	
	//Row upctforma::Row:
	//	{upctforma::Row}
	//	'Row'
	//	'{' ('columns' '{' columns+=Column ("," columns+=Column)* '}')? ('usetemplate' usetemplate=UseTemplate)?
	//	'}';
	public RowElements getRowAccess() {
		return pRow;
	}
	
	public ParserRule getRowRule() {
		return getRowAccess().getRule();
	}
	
	//Column upctforma::Column:
	//	{upctforma::Column}
	//	'Column'
	//	'{' ('width' width=EString)? ('elements' '{' elements+=ContentElement ("," elements+=ContentElement)* '}')?
	//	'}';
	public ColumnElements getColumnAccess() {
		return pColumn;
	}
	
	public ParserRule getColumnRule() {
		return getColumnAccess().getRule();
	}
	
	//UseTemplate upctforma::UseTemplate:
	//	{upctforma::UseTemplate}
	//	'UseTemplate'
	//	'{' ('typetemplate' typetemplate=[upctforma::TemplateDef|EString])? ('arguments' '{' arguments+=Argument (","
	//	arguments+=Argument)* '}')?
	//	'}';
	public UseTemplateElements getUseTemplateAccess() {
		return pUseTemplate;
	}
	
	public ParserRule getUseTemplateRule() {
		return getUseTemplateAccess().getRule();
	}
	
	//ContentElement_Impl upctforma::ContentElement:
	//	{upctforma::ContentElement}
	//	'ContentElement';
	public ContentElement_ImplElements getContentElement_ImplAccess() {
		return pContentElement_Impl;
	}
	
	public ParserRule getContentElement_ImplRule() {
		return getContentElement_ImplAccess().getRule();
	}
	
	//Image upctforma::Image:
	//	{upctforma::Image}
	//	'Image'
	//	'{' ('url' url=EString)?
	//	'}';
	public ImageElements getImageAccess() {
		return pImage;
	}
	
	public ParserRule getImageRule() {
		return getImageAccess().getRule();
	}
	
	//Widget upctforma::Widget:
	//	'Widget'
	//	name=EString
	//	'{'
	//	'widgettype' widgettype=[upctforma::WidgetType|EString] ('widgetarguments' '{' widgetarguments+=Argument (","
	//	widgetarguments+=Argument)* '}')?
	//	'}';
	public WidgetElements getWidgetAccess() {
		return pWidget;
	}
	
	public ParserRule getWidgetRule() {
		return getWidgetAccess().getRule();
	}
	
	//Text upctforma::Text:
	//	'Text'
	//	'{'
	//	'paragraphs' '{' paragraphs+=Paragraph ("," paragraphs+=Paragraph)* '}'
	//	'}';
	public TextElements getTextAccess() {
		return pText;
	}
	
	public ParserRule getTextRule() {
		return getTextAccess().getRule();
	}
	
	//Composite_Impl upctforma::Composite:
	//	{upctforma::Composite}
	//	'Composite';
	public Composite_ImplElements getComposite_ImplAccess() {
		return pComposite_Impl;
	}
	
	public ParserRule getComposite_ImplRule() {
		return getComposite_ImplAccess().getRule();
	}
	
	//Video upctforma::Video:
	//	{upctforma::Video}
	//	'Video'
	//	'{' ('url' url=EString)?
	//	'}';
	public VideoElements getVideoAccess() {
		return pVideo;
	}
	
	public ParserRule getVideoRule() {
		return getVideoAccess().getRule();
	}
	
	//SimpleElement_Impl upctforma::SimpleElement:
	//	{upctforma::SimpleElement}
	//	'SimpleElement';
	public SimpleElement_ImplElements getSimpleElement_ImplAccess() {
		return pSimpleElement_Impl;
	}
	
	public ParserRule getSimpleElement_ImplRule() {
		return getSimpleElement_ImplAccess().getRule();
	}
	
	//Parameter_Impl upctforma::Parameter:
	//	'Parameter'
	//	'{'
	//	'type' type=[upctforma::Type|EString]
	//	'}';
	public Parameter_ImplElements getParameter_ImplAccess() {
		return pParameter_Impl;
	}
	
	public ParserRule getParameter_ImplRule() {
		return getParameter_ImplAccess().getRule();
	}
	
	//Fixed upctforma::Fixed:
	//	'Fixed'
	//	'{'
	//	'type' type=[upctforma::Type|EString]
	//	'}';
	public FixedElements getFixedAccess() {
		return pFixed;
	}
	
	public ParserRule getFixedRule() {
		return getFixedAccess().getRule();
	}
	
	//Variable upctforma::Variable:
	//	'Variable'
	//	'{'
	//	'type' type=[upctforma::Type|EString]
	//	'}';
	public VariableElements getVariableAccess() {
		return pVariable;
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}
	
	//Argument_Impl upctforma::Argument:
	//	{upctforma::Argument}
	//	'Argument';
	public Argument_ImplElements getArgument_ImplAccess() {
		return pArgument_Impl;
	}
	
	public ParserRule getArgument_ImplRule() {
		return getArgument_ImplAccess().getRule();
	}
	
	//Tab upctforma::Tab:
	//	{upctforma::Tab}
	//	'Tab'
	//	'{' ('arguments' '{' arguments+=SimpleElement ("," arguments+=SimpleElement)* '}')?
	//	'}';
	public TabElements getTabAccess() {
		return pTab;
	}
	
	public ParserRule getTabRule() {
		return getTabAccess().getRule();
	}
	
	//Animation upctforma::Animation:
	//	{upctforma::Animation}
	//	'Animation'
	//	'{' ('width' width=EString)? ('image' image=EString)? ('arguments' '{' arguments+=SimpleElement (","
	//	arguments+=SimpleElement)* '}')?
	//	'}';
	public AnimationElements getAnimationAccess() {
		return pAnimation;
	}
	
	public ParserRule getAnimationRule() {
		return getAnimationAccess().getRule();
	}
	
	//DragAndDrop upctforma::DragAndDrop:
	//	{upctforma::DragAndDrop}
	//	'DragAndDrop'
	//	'{' ('arguments' '{' arguments+=SimpleElement ("," arguments+=SimpleElement)* '}')?
	//	'}';
	public DragAndDropElements getDragAndDropAccess() {
		return pDragAndDrop;
	}
	
	public ParserRule getDragAndDropRule() {
		return getDragAndDropAccess().getRule();
	}
	
	//CompositeArgument_Impl upctforma::CompositeArgument:
	//	{upctforma::CompositeArgument}
	//	'CompositeArgument'
	//	'{' ('arguments' '{' arguments+=SimpleElement ("," arguments+=SimpleElement)* '}')?
	//	'}';
	public CompositeArgument_ImplElements getCompositeArgument_ImplAccess() {
		return pCompositeArgument_Impl;
	}
	
	public ParserRule getCompositeArgument_ImplRule() {
		return getCompositeArgument_ImplAccess().getRule();
	}
	
	//Paragraph upctforma::Paragraph:
	//	{upctforma::Paragraph}
	//	'Paragraph'
	//	'{' ('text' text=EString)?
	//	'}';
	public ParagraphElements getParagraphAccess() {
		return pParagraph;
	}
	
	public ParserRule getParagraphRule() {
		return getParagraphAccess().getRule();
	}
	
	//Type_Impl upctforma::Type:
	//	{upctforma::Type}
	//	'Type'
	//	name=EString;
	public Type_ImplElements getType_ImplAccess() {
		return pType_Impl;
	}
	
	public ParserRule getType_ImplRule() {
		return getType_ImplAccess().getRule();
	}
	
	//SimpleType upctforma::SimpleType:
	//	{upctforma::SimpleType}
	//	'SimpleType'
	//	name=EString
	//	'{' ('type' type=TypeSimpleElement)?
	//	'}';
	public SimpleTypeElements getSimpleTypeAccess() {
		return pSimpleType;
	}
	
	public ParserRule getSimpleTypeRule() {
		return getSimpleTypeAccess().getRule();
	}
	
	//AggregatedType upctforma::AggregatedType:
	//	{upctforma::AggregatedType}
	//	'AggregatedType'
	//	name=EString
	//	'{' ('type' '{' type+=SimpleType ("," type+=SimpleType)* '}')?
	//	'}';
	public AggregatedTypeElements getAggregatedTypeAccess() {
		return pAggregatedType;
	}
	
	public ParserRule getAggregatedTypeRule() {
		return getAggregatedTypeAccess().getRule();
	}
	
	//ListType upctforma::ListType:
	//	{upctforma::ListType}
	//	'List'
	//	name=EString
	//	listtype=[upctforma::SimpleType|EString]?;
	public ListTypeElements getListTypeAccess() {
		return pListType;
	}
	
	public ParserRule getListTypeRule() {
		return getListTypeAccess().getRule();
	}
	
	//enum TypeSimpleElement returns upctforma::TypeSimpleElement:
	//	Text | Image | Video | Undefined;
	public TypeSimpleElementElements getTypeSimpleElementAccess() {
		return eTypeSimpleElement;
	}
	
	public EnumRule getTypeSimpleElementRule() {
		return getTypeSimpleElementAccess().getRule();
	}
	
	//TemplateDef upctforma::TemplateDef:
	//	{upctforma::TemplateDef}
	//	'TemplateDef'
	//	name=EString
	//	'{' ('rows' '{' rows+=Row ("," rows+=Row)* '}')?
	//	'}';
	public TemplateDefElements getTemplateDefAccess() {
		return pTemplateDef;
	}
	
	public ParserRule getTemplateDefRule() {
		return getTemplateDefAccess().getRule();
	}
	
	//EvaluationUnit_Impl upctformaevalua::EvaluationUnit:
	//	{upctformaevalua::EvaluationUnit}
	//	'EvaluationUnit'
	//	name=EString
	//	'{' ('numberquestions' numberquestions=EInt)? ('questions' '{' questions+=Question ("," questions+=Question)* '}')?
	//	'}';
	public EvaluationUnit_ImplElements getEvaluationUnit_ImplAccess() {
		return pEvaluationUnit_Impl;
	}
	
	public ParserRule getEvaluationUnit_ImplRule() {
		return getEvaluationUnit_ImplAccess().getRule();
	}
	
	//Question_Impl upctformaevalua::Question:
	//	{upctformaevalua::Question}
	//	'Question'
	//	'{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
	//	'}';
	public Question_ImplElements getQuestion_ImplAccess() {
		return pQuestion_Impl;
	}
	
	public ParserRule getQuestion_ImplRule() {
		return getQuestion_ImplAccess().getRule();
	}
	
	//Training upctformaevalua::Training:
	//	{upctformaevalua::Training}
	//	'Training'
	//	name=EString
	//	'{' ('numberquestions' numberquestions=EInt)? ('Attempts' Attempts=EInt)? ('grade' grade=TypeGrade)? ('questions' '{'
	//	questions+=Question ("," questions+=Question)* '}')?
	//	'}';
	public TrainingElements getTrainingAccess() {
		return pTraining;
	}
	
	public ParserRule getTrainingRule() {
		return getTrainingAccess().getRule();
	}
	
	//Final upctformaevalua::Final:
	//	{upctformaevalua::Final}
	//	'Final'
	//	name=EString
	//	'{' ('numberquestions' numberquestions=EInt)? ('questions' '{' questions+=Question ("," questions+=Question)* '}')?
	//	'}';
	public FinalElements getFinalAccess() {
		return pFinal;
	}
	
	public ParserRule getFinalRule() {
		return getFinalAccess().getRule();
	}
	
	//UniqueAnswer upctformaevalua::UniqueAnswer:
	//	'UniqueAnswer'
	//	'{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)? ('correctanswer'
	//	correctanswer=EInt)?
	//	'statements' statements=Paragraph0 ('answers' '{' answers+=Unique ("," answers+=Unique)* '}')?
	//	'}';
	public UniqueAnswerElements getUniqueAnswerAccess() {
		return pUniqueAnswer;
	}
	
	public ParserRule getUniqueAnswerRule() {
		return getUniqueAnswerAccess().getRule();
	}
	
	//MultipleAnswer upctformaevalua::MultipleAnswer:
	//	'MultipleAnswer'
	//	'{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
	//	'statements' statements=Paragraph0 ('answers' '{' answers+=Multiple ("," answers+=Multiple)* '}')?
	//	'}';
	public MultipleAnswerElements getMultipleAnswerAccess() {
		return pMultipleAnswer;
	}
	
	public ParserRule getMultipleAnswerRule() {
		return getMultipleAnswerAccess().getRule();
	}
	
	//FillingAnswer upctformaevalua::FillingAnswer:
	//	{upctformaevalua::FillingAnswer}
	//	'FillingAnswer'
	//	'{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)? ('holes' '{'
	//	holes+=Hole ("," holes+=Hole)* '}')?
	//	'}';
	public FillingAnswerElements getFillingAnswerAccess() {
		return pFillingAnswer;
	}
	
	public ParserRule getFillingAnswerRule() {
		return getFillingAnswerAccess().getRule();
	}
	
	//TrueOrFalse upctformaevalua::TrueOrFalse:
	//	{upctformaevalua::TrueOrFalse}
	//	'TrueOrFalse'
	//	'{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)? ('assertions' '{'
	//	assertions+=Assertion ("," assertions+=Assertion)* '}')?
	//	'}';
	public TrueOrFalseElements getTrueOrFalseAccess() {
		return pTrueOrFalse;
	}
	
	public ParserRule getTrueOrFalseRule() {
		return getTrueOrFalseAccess().getRule();
	}
	
	//Paragraph0 upctformaevalua::Paragraph:
	//	{upctformaevalua::Paragraph}
	//	'Paragraph'
	//	'{' ('text' text=EString)?
	//	'}';
	public Paragraph0Elements getParagraph0Access() {
		return pParagraph0;
	}
	
	public ParserRule getParagraph0Rule() {
		return getParagraph0Access().getRule();
	}
	
	//Unique upctformaevalua::Unique:
	//	{upctformaevalua::Unique}
	//	'Unique'
	//	'{' ('text' text=EString)?
	//	'}';
	public UniqueElements getUniqueAccess() {
		return pUnique;
	}
	
	public ParserRule getUniqueRule() {
		return getUniqueAccess().getRule();
	}
	
	//Multiple upctformaevalua::Multiple:
	//	{upctformaevalua::Multiple} value?='value'?
	//	'Multiple'
	//	'{' ('text' text=EString)?
	//	'}';
	public MultipleElements getMultipleAccess() {
		return pMultiple;
	}
	
	public ParserRule getMultipleRule() {
		return getMultipleAccess().getRule();
	}
	
	//Hole upctformaevalua::Hole:
	//	{upctformaevalua::Hole}
	//	'Hole'
	//	'{' ('text' text=EString)? ('type' type=TypeHole)?
	//	'}';
	public HoleElements getHoleAccess() {
		return pHole;
	}
	
	public ParserRule getHoleRule() {
		return getHoleAccess().getRule();
	}
	
	//enum TypeHole returns upctformaevalua::TypeHole:
	//	visible | hole;
	public TypeHoleElements getTypeHoleAccess() {
		return eTypeHole;
	}
	
	public EnumRule getTypeHoleRule() {
		return getTypeHoleAccess().getRule();
	}
	
	//Assertion upctformaevalua::Assertion:
	//	{upctformaevalua::Assertion} value?='value'?
	//	'Assertion'
	//	'{' ('text' text=EString)?
	//	'}';
	public AssertionElements getAssertionAccess() {
		return pAssertion;
	}
	
	public ParserRule getAssertionRule() {
		return getAssertionAccess().getRule();
	}
	
	//enum TypeGrade returns upctformaevalua::TypeGrade:
	//	highest | middle | lowest;
	public TypeGradeElements getTypeGradeAccess() {
		return eTypeGrade;
	}
	
	public EnumRule getTypeGradeRule() {
		return getTypeGradeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
