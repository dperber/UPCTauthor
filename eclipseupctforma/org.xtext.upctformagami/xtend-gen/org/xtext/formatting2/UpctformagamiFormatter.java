/**
 * generated by Xtext 2.12.0
 */
package org.xtext.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.services.UpctformagamiGrammarAccess;
import upctformagami.Badge;
import upctformagami.Gamification;
import upctformagami.Import;
import upctformagami.Point;
import upctformagami.UnitPoint;
import upctformagami.WidgetDefPoint;

@SuppressWarnings("all")
public class UpctformagamiFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private UpctformagamiGrammarAccess _upctformagamiGrammarAccess;
  
  protected void _format(final Gamification gamification, @Extension final IFormattableDocument document) {
    EList<Import> _imports = gamification.getImports();
    for (final Import _import : _imports) {
      document.<Import>format(_import);
    }
    EList<Badge> _badges = gamification.getBadges();
    for (final Badge badge : _badges) {
      document.<Badge>format(badge);
    }
    EList<WidgetDefPoint> _widgets = gamification.getWidgets();
    for (final WidgetDefPoint widgetDefPoint : _widgets) {
      document.<WidgetDefPoint>format(widgetDefPoint);
    }
    EList<UnitPoint> _units = gamification.getUnits();
    for (final UnitPoint unitPoint : _units) {
      document.<UnitPoint>format(unitPoint);
    }
  }
  
  protected void _format(final WidgetDefPoint widgetDefPoint, @Extension final IFormattableDocument document) {
    EList<Point> _pointswidgetdef = widgetDefPoint.getPointswidgetdef();
    for (final Point point : _pointswidgetdef) {
      document.<Point>format(point);
    }
  }
  
  public void format(final Object gamification, final IFormattableDocument document) {
    if (gamification instanceof XtextResource) {
      _format((XtextResource)gamification, document);
      return;
    } else if (gamification instanceof Gamification) {
      _format((Gamification)gamification, document);
      return;
    } else if (gamification instanceof WidgetDefPoint) {
      _format((WidgetDefPoint)gamification, document);
      return;
    } else if (gamification instanceof EObject) {
      _format((EObject)gamification, document);
      return;
    } else if (gamification == null) {
      _format((Void)null, document);
      return;
    } else if (gamification != null) {
      _format(gamification, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(gamification, document).toString());
    }
  }
}
